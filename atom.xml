<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>心小天个人博客</title>
  
  <subtitle>生活不止coding,还有诗和远方。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://puguojing.com/"/>
  <updated>2018-11-06T04:04:12.573Z</updated>
  <id>http://puguojing.com/</id>
  
  <author>
    <name>心小天</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>随笔</title>
    <link href="http://puguojing.com/2018/11/06/%E9%9A%8F%E7%AC%94/"/>
    <id>http://puguojing.com/2018/11/06/随笔/</id>
    <published>2018-11-06T03:32:20.000Z</published>
    <updated>2018-11-06T04:04:12.573Z</updated>
    
    <content type="html"><![CDATA[ <font color="#e67e22">正如你所看到的这里并没有什么内容… </font>]]></content>
    
    <summary type="html">
    
      
      
         &lt;font color=&quot;#e67e22&quot;&gt;正如你所看到的这里并没有什么内容… &lt;/font&gt;


      
    
    </summary>
    
      <category term="随笔" scheme="http://puguojing.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac下Redis数据的安装、操作、配置</title>
    <link href="http://puguojing.com/2018/10/16/Redis%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AE%89%E8%A3%85%E3%80%81%E6%93%8D%E4%BD%9C%E3%80%81%E9%85%8D%E7%BD%AE/"/>
    <id>http://puguojing.com/2018/10/16/Redis数据的安装、操作、配置/</id>
    <published>2018-10-16T07:49:56.000Z</published>
    <updated>2018-11-06T03:20:18.796Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><p>使用brew安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install redis</span><br></pre></td></tr></table></figure><p>完成后会自动安装redis-server和redis-cli。</p><p>redis安装后，默认会自动启动，可以通过以下PS进程命令查看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux|grep redis</span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ps aux|grep redis</span><br><span class="line">pgj              17677   0.0  0.0  4287208   1064 s001  S+    3:54下午   0:00.01 grep --color=auto --exclude-dir=.bzr --exclude-dir=CVS --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn redis</span><br><span class="line">pgj              17616   0.0  0.0  4295500   1160 s003  S+    3:44下午   0:00.02 redis-cli -h 127.0.0.1 -p 6379 -a foobared</span><br><span class="line">pgj              17555   0.0  0.0  4309276   2312 s002  S+    3:40下午   0:00.62 redis-server 127.0.0.1:6379</span><br></pre></td></tr></table></figure><p>可以看到进程PID为17555的就是redis-server,可以使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill 17555</span><br></pre></td></tr></table></figure><p>关闭Redis服务（不建议使用，强制杀死进程，可能导致Redis部分缓存丢失）。</p><h4 id="手动启动："><a href="#手动启动：" class="headerlink" title="手动启动："></a>手动启动：</h4><p>Redis安装完成后会生成<code>/usr/local/etc/redis.conf</code>文件，执行启动命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server /usr/local/etc/redis.conf</span><br></pre></td></tr></table></figure><p>会显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ redis-server /usr/local/etc/redis.conf</span><br><span class="line">17555:C 16 Oct 15:40:34.312 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span><br><span class="line">17555:C 16 Oct 15:40:34.313 # Redis version=4.0.4, bits=64, commit=00000000, modified=0, pid=17555, just started</span><br><span class="line">17555:C 16 Oct 15:40:34.313 # Configuration loaded</span><br><span class="line">17555:M 16 Oct 15:40:34.316 * Increased maximum number of open files to 10032 (it was originally set to 4864).</span><br><span class="line">                _._</span><br><span class="line">           _.-``__ &apos;&apos;-._</span><br><span class="line">      _.-``    `.  `_.  &apos;&apos;-._           Redis 4.0.4 (00000000/0) 64 bit</span><br><span class="line">  .-`` .-```.  ```\/    _.,_ &apos;&apos;-._</span><br><span class="line"> (    &apos;      ,       .-`  | `,    )     Running in standalone mode</span><br><span class="line"> |`-._`-...-` __...-.``-._|&apos;` _.-&apos;|     Port: 6379</span><br><span class="line"> |    `-._   `._    /     _.-&apos;    |     PID: 17555</span><br><span class="line">  `-._    `-._  `-./  _.-&apos;    _.-&apos;</span><br><span class="line"> |`-._`-._    `-.__.-&apos;    _.-&apos;_.-&apos;|</span><br><span class="line"> |    `-._`-._        _.-&apos;_.-&apos;    |           http://redis.io</span><br><span class="line">  `-._    `-._`-.__.-&apos;_.-&apos;    _.-&apos;</span><br><span class="line"> |`-._`-._    `-.__.-&apos;    _.-&apos;_.-&apos;|</span><br><span class="line"> |    `-._`-._        _.-&apos;_.-&apos;    |</span><br><span class="line">  `-._    `-._`-.__.-&apos;_.-&apos;    _.-&apos;</span><br><span class="line">      `-._    `-.__.-&apos;    _.-&apos;</span><br><span class="line">          `-._        _.-&apos;</span><br></pre></td></tr></table></figure><p>说明启动成功。</p><h4 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h [ip] -p [端口]</span><br></pre></td></tr></table></figure><p>-h:指定IP<br>-p:指定端口号（默认6379，可在redis.conf中修改）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 127.0.0.1 -p 6379</span><br></pre></td></tr></table></figure><p>###配置<br>配置文件具体在：<code>/usr/local/etc/redis.conf</code></p><h4 id="1-添加密码"><a href="#1-添加密码" class="headerlink" title="1.添加密码"></a>1.添加密码</h4><p>在配置文件中找到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># use a very strong password otherwise it will be very easy to break.</span><br><span class="line">#</span><br><span class="line"># requirepass foobared</span><br><span class="line">#</span><br></pre></td></tr></table></figure><p>其中<code>requirepass</code>后面的字符，就是Redis数据库密码,默认时注释掉的。如果此处指定了密码，那么以后使用<code>redis-cli</code>链接redis数据库的时候就要使用密码，否则连接Redis数据库之后,无法进行Redis数据库操作。<br>比如指定密码为：123456</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># use a very strong password otherwise it will be very easy to break.</span><br><span class="line">#</span><br><span class="line">requirepass 123456</span><br><span class="line">#</span><br></pre></td></tr></table></figure><p>那么以后使用<code>redis-cli</code>连接数据库的时候就要用<code>-a</code>指定密码下面的命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 127.0.0.1 -p 6379 -a 123456</span><br></pre></td></tr></table></figure><p>如果你在连接redis数据库是没有使用-a指定密码，也可以在redis-cli命令行中使用：<code>auth password</code>指定密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; auth 123456</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><h4 id="2-让其其他的电脑访问可以redis"><a href="#2-让其其他的电脑访问可以redis" class="headerlink" title="2.让其其他的电脑访问可以redis"></a>2.让其其他的电脑访问可以redis</h4><p>在配置文件中找打bind,默认IP只有127.0.0.1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bind 127.0.0.1 ::1</span><br></pre></td></tr></table></figure><p>在<code>127.0.0.1</code>后面加上自己电脑的（redis-server所在的电脑）的IP。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bind 127.0.0.1  198.168.1.102</span><br></pre></td></tr></table></figure><p>注意：添加不是Redis客户端的IP，是redis-server端的IP。<br>这样别的客户端就可以使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 198.168.1.102 6379</span><br></pre></td></tr></table></figure><p>来连接redis数据库了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1.安装&quot;&gt;&lt;/a&gt;1.安装&lt;/h3&gt;&lt;p&gt;使用brew安装&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="数据库" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="http://puguojing.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="Redis" scheme="http://puguojing.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>memcached（1）- 调试使用</title>
    <link href="http://puguojing.com/2018/10/12/memcached%EF%BC%881%EF%BC%89-%20%E8%B0%83%E8%AF%95%E4%BD%BF%E7%94%A8/"/>
    <id>http://puguojing.com/2018/10/12/memcached（1）- 调试使用/</id>
    <published>2018-10-12T13:07:03.000Z</published>
    <updated>2018-11-06T03:16:38.860Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Mac-memcached的调试"><a href="#Mac-memcached的调试" class="headerlink" title="Mac memcached的调试"></a>Mac memcached的调试</h4><h5 id="1-安装："><a href="#1-安装：" class="headerlink" title="1.安装："></a>1.安装：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install memcached</span><br></pre></td></tr></table></figure><h5 id="2-启动："><a href="#2-启动：" class="headerlink" title="2.启动："></a>2.启动：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">memcached -d -p 11211 -u nobody -c 1024 -m 64</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-d：这个参数是让memcached在后台运行（启动一个守护进程）。</span><br><span class="line">-m：指定占用多少内存。以M为单位，默认为64M。</span><br><span class="line">-u是运行Memcache的用户，我这里是nobody</span><br><span class="line">-p：设置Memcache监听的端口,最好是1024以上的端口，默认端口是11211。</span><br><span class="line">-l：别的机器可以通过哪个ip地址连接到我这台服务器。如果是通过service memcached </span><br><span class="line">start的方式，那么只能通过本机连接。如果想要让别的机器连接，就必须设置-l 0.0.0.0。</span><br><span class="line">-c选项是最大运行的并发连接数，默认是1024，按照你服务器的负载量来设定</span><br></pre></td></tr></table></figure><h5 id="3-Telnet连接"><a href="#3-Telnet连接" class="headerlink" title="3.Telnet连接"></a>3.Telnet连接</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 127.0.0.1 11211</span><br></pre></td></tr></table></figure><h5 id="telnet操作memcached"><a href="#telnet操作memcached" class="headerlink" title="telnet操作memcached:"></a>telnet操作memcached:</h5><p>memcached的数据是以 key:value 方式存储在内存中，所以我们一般对key 进行操作，而value保存实际的值。</p><h6 id="1-set：添加或更新数据："><a href="#1-set：添加或更新数据：" class="headerlink" title="1.set：添加或更新数据："></a>1.set：添加或更新数据：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">  set key flas(是否压缩) timeout(存储的时间,0代表一直存储) value_length(value的长度)</span><br><span class="line">  value</span><br><span class="line">示例：</span><br><span class="line">  set username 0 60 7</span><br><span class="line">  zhiliao</span><br></pre></td></tr></table></figure><p>注意指定的value长度和实际输入value的长度必须一致，否则按Enter键后会出现ERROR(如果实际的value长度大于指定的长度)或者一直等到你输入完指定的字符数。</p><h6 id="2-add：添加数据"><a href="#2-add：添加数据" class="headerlink" title="2.add：添加数据"></a>2.add：添加数据</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">  add key flas(是否压缩) timeout(存储的时间,0代表一直存储) value_length(value的长度)</span><br><span class="line">  value</span><br><span class="line">示例：</span><br><span class="line">  add username 0 60 7</span><br><span class="line">  xiaotuo</span><br></pre></td></tr></table></figure><p>set和add的区别：add是只负责添加数据，不会去修改数据。如果添加的数据的key已经存在了，则添加失败，如果添加的key不存在，则添加成功。而set不同，如果memcached中不存在相同的key，则进行添加，如果存在，则替换。</p><p>set、add执行成功后会显示：STORED，未执行成功会显示：NOT STORED </p><h6 id="3-get：获取数据"><a href="#3-get：获取数据" class="headerlink" title="3.get：获取数据"></a>3.get：获取数据</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">  get key</span><br><span class="line">示例：</span><br><span class="line">  get username</span><br></pre></td></tr></table></figure><h6 id="4-delete-删除数据"><a href="#4-delete-删除数据" class="headerlink" title="4.delete:删除数据"></a>4.delete:删除数据</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">  delete key</span><br><span class="line">示例：</span><br><span class="line">  delete username</span><br></pre></td></tr></table></figure><h6 id="5-flush-all：删除memcached中的所有数据。"><a href="#5-flush-all：删除memcached中的所有数据。" class="headerlink" title="5.flush_all：删除memcached中的所有数据。"></a>5.flush_all：删除memcached中的所有数据。</h6><h6 id="6-incr-给memcached中数字类型的值进行相加操作，相加的项必须也是数字类型。"><a href="#6-incr-给memcached中数字类型的值进行相加操作，相加的项必须也是数字类型。" class="headerlink" title="6.incr:给memcached中数字类型的值进行相加操作，相加的项必须也是数字类型。"></a>6.incr:给memcached中数字类型的值进行相加操作，相加的项必须也是数字类型。</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">语法：</span><br><span class="line">incr key num(num表示要加的值，必须是数字)</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">incr age 2   给key是age的值加上2</span><br></pre></td></tr></table></figure><h6 id="7-decr-给memcached中数字类型的值进行减操作，相减的项必须也是数字类型。"><a href="#7-decr-给memcached中数字类型的值进行减操作，相减的项必须也是数字类型。" class="headerlink" title="7.decr:给memcached中数字类型的值进行减操作，相减的项必须也是数字类型。"></a>7.decr:给memcached中数字类型的值进行减操作，相减的项必须也是数字类型。</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">decr key num(num表示要减的值，必须是数字)</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">devr age 2   给key是age的值减去2</span><br></pre></td></tr></table></figure><h6 id="8-stats：查看memcached的当前状态，可以查看自己的操作记录和正确执行数据，以分析memcached的命中率（正确率）"><a href="#8-stats：查看memcached的当前状态，可以查看自己的操作记录和正确执行数据，以分析memcached的命中率（正确率）" class="headerlink" title="8.stats：查看memcached的当前状态，可以查看自己的操作记录和正确执行数据，以分析memcached的命中率（正确率）"></a>8.stats：查看memcached的当前状态，可以查看自己的操作记录和正确执行数据，以分析memcached的命中率（正确率）</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line">stats</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">STAT pid 5286</span><br><span class="line">STAT uptime 3741</span><br><span class="line">STAT time 1539349048</span><br><span class="line">STAT version 1.5.3</span><br><span class="line">...</span><br><span class="line">STAT cmd_get 9   #表示进行实际get的次数</span><br><span class="line">STAT cmd_set 16  #表示进行实际get的次数</span><br><span class="line">STAT cmd_flush 1</span><br><span class="line">STAT cmd_touch 0</span><br><span class="line">STAT get_hits 7  #表示get命中(有效)的次数</span><br><span class="line">...</span><br><span class="line">END</span><br></pre></td></tr></table></figure><p>常见的：<br>STAT cmd_get 9  表示进行实际get的次数<br>STAT cmd_set 16  表示进行实际set的次数<br>STAT get_hits 7  表示get命中(有效)的次数<br>STAT curr_items 4 表示当前有多少条数据</p><p>stats之后会显示很多结果常用的就是查看set、get等操作的cmd_get/set 数量和 get_hits 数量  用类似: get_hits/cmd_get  的结果反映当前memcached的状态，如果命中率良好，说明memcached的状态良好，反之说明memcached的状态较差，比如可能碎片较多。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Mac-memcached的调试&quot;&gt;&lt;a href=&quot;#Mac-memcached的调试&quot; class=&quot;headerlink&quot; title=&quot;Mac memcached的调试&quot;&gt;&lt;/a&gt;Mac memcached的调试&lt;/h4&gt;&lt;h5 id=&quot;1-安装：&quot;&gt;&lt;a
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="数据库" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="http://puguojing.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="memcached" scheme="http://puguojing.com/tags/memcached/"/>
    
  </entry>
  
  <entry>
    <title>MySQL中的left join、right join 以及inner join之间的区别</title>
    <link href="http://puguojing.com/2018/10/08/Mysql%E4%B8%AD%E7%9A%84%E5%86%85%E8%81%94%E6%8E%A5%E3%80%81%E5%B7%A6%E5%A4%96%E8%81%94%E6%8E%A5%E3%80%81%E5%8F%B3%E5%A4%96%E8%81%94%E6%8E%A5/"/>
    <id>http://puguojing.com/2018/10/08/Mysql中的内联接、左外联接、右外联接/</id>
    <published>2018-10-08T06:29:15.000Z</published>
    <updated>2018-11-06T03:17:21.027Z</updated>
    
    <content type="html"><![CDATA[<h3 id="sql语句中left-join、right-join-以及inner-join之间的区别"><a href="#sql语句中left-join、right-join-以及inner-join之间的区别" class="headerlink" title="sql语句中left join、right join 以及inner join之间的区别"></a>sql语句中left join、right join 以及inner join之间的区别</h3><p>left [outer] join(左联接)： 返回包括左表中的所有记录和右表中联结字段相等的记录 。<br>right [outer] join(右联接) ：返回包括右表中的所有记录和左表中联结字段相等的记录。<br>inner join(等值连接) ：只返回两个表中联结字段相等的行。</p><blockquote><p>左联接和右联接统称为外联接，其中的outer关键字可以省略。</p></blockquote><blockquote><p>左连接和右连接的区别在于以哪个表为主（主表中的数据都会出现在表中）</p></blockquote><h3 id="举例如下："><a href="#举例如下：" class="headerlink" title="举例如下："></a>举例如下：</h3><p>表A记录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">aID　　　　　aNum</span><br><span class="line">1　　　　　a20050111</span><br><span class="line">2　　　　　a20050112</span><br><span class="line">3　　　　　a20050113</span><br><span class="line">4　　　　　a20050114</span><br><span class="line">5　　　　　a20050115</span><br></pre></td></tr></table></figure><p>表B记录如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bID　　　　　bName</span><br><span class="line">1　　　　　2006032401</span><br><span class="line">2　　　　　2006032402</span><br><span class="line">3　　　　　2006032403</span><br><span class="line">4　　　　　2006032404</span><br><span class="line">8　　　　　2006032408</span><br></pre></td></tr></table></figure><p>-</p><h4 id="1-left-join"><a href="#1-left-join" class="headerlink" title="1.left join"></a>1.left join</h4><p>sql语句如下: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from A</span><br><span class="line">left join B </span><br><span class="line">on A.aID = B.bID</span><br></pre></td></tr></table></figure><p>结果如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">aID　　　　　aNum　　　　　bID　　　　　bName</span><br><span class="line">1　　　　　a20050111　　　　1　　　　　2006032401</span><br><span class="line">2　　　　　a20050112　　　　2　　　　　2006032402</span><br><span class="line">3　　　　　a20050113　　　　3　　　　　2006032403</span><br><span class="line">4　　　　　a20050114　　　　4　　　　　2006032404</span><br><span class="line">5　　　　　a20050115　　　　NULL　　　　　NULL</span><br></pre></td></tr></table></figure><p>（所影响的行数为 5 行）<br>结果说明:<br>left join是以A表的记录为基础的,A可以看成左表,B可以看成右表,left join是以左表为准的.</p><p>换句话说,左表(A)的记录将会全部表示出来,而右表(B)只会显示符合搜索条件的记录(例子中为: A.aID = B.bID).<br>B表记录不足的地方均为NULL.</p><p>-</p><h4 id="2-right-join"><a href="#2-right-join" class="headerlink" title="2.right join"></a>2.right join</h4><p>sql语句如下: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from A</span><br><span class="line">right join B </span><br><span class="line">on A.aID = B.bID</span><br></pre></td></tr></table></figure><p>结果如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">aID　　　　　aNum　　　　　bID　　　　　bName</span><br><span class="line">1　　　　　a20050111　　　　1　　　　　2006032401</span><br><span class="line">2　　　　　a20050112　　　　2　　　　　2006032402</span><br><span class="line">3　　　　　a20050113　　　　3　　　　　2006032403</span><br><span class="line">4　　　　　a20050114　　　　4　　　　　2006032404</span><br><span class="line">NULL　　　　　NULL　　　　　8　　　　　2006032408</span><br></pre></td></tr></table></figure><p>（所影响的行数为 5 行）<br>结果说明:<br>仔细观察一下,就会发现,和left join的结果刚好相反,这次是以右表(B)为基础的,A表不足的地方用NULL填充.</p><p>-</p><h4 id="3-inner-join"><a href="#3-inner-join" class="headerlink" title="3.inner join"></a>3.inner join</h4><p>sql语句如下: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from A</span><br><span class="line">innerjoin B </span><br><span class="line">on A.aID = B.bID</span><br></pre></td></tr></table></figure><p>结果如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">aID　　　　　aNum　　　　　bID　　　　　bName</span><br><span class="line">1　　　　　a20050111　　　　1　　　　　2006032401</span><br><span class="line">2　　　　　a20050112　　　　2　　　　　2006032402</span><br><span class="line">3　　　　　a20050113　　　　3　　　　　2006032403</span><br><span class="line">4　　　　　a20050114　　　　4　　　　　2006032404</span><br></pre></td></tr></table></figure><p>结果说明:<br>很明显,这里只显示出了 A.aID = B.bID的记录.这说明inner join并不以谁为基础,它只显示符合条件的记录.</p><p>-</p><p>注:<br>LEFT JOIN操作用于在任何的 FROM 子句中，组合来源表的记录。使用 LEFT JOIN 运算来创建一个左边外部联接。左边外部联接将包含了从第一个（左边）开始的两个表中的全部记录，即使在第二个（右边）表中并没有相符值的记录。</p><p>语法：<code>FROM table1 LEFT JOIN table2 ON table1.field1 compopr table2.field2</code><br>说明：table1, table2参数用于指定要将记录组合的表的名称。</p><p>field1, field2参数指定被联接的字段的名称。且这些字段必须有相同的数据类型及包含相同类型的数据，但它们不需要有相同的名称。</p><p>compopr参数指定关系比较运算符：”=”， “&lt;”， “&gt;”， “&lt;=”， “&gt;=” 或 “&lt;&gt;”。</p><p>如果在INNER JOIN操作中要联接包含Memo 数据类型或 OLE Object 数据类型数据的字段，将会发生错误。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;sql语句中left-join、right-join-以及inner-join之间的区别&quot;&gt;&lt;a href=&quot;#sql语句中left-join、right-join-以及inner-join之间的区别&quot; class=&quot;headerlink&quot; title=&quot;sql语
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="数据库" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Python" scheme="http://puguojing.com/tags/Python/"/>
    
      <category term="数据库" scheme="http://puguojing.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://puguojing.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Pycharm连接mysql数据库</title>
    <link href="http://puguojing.com/2018/10/07/pycharm%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://puguojing.com/2018/10/07/pycharm连接mysql数据库/</id>
    <published>2018-10-07T10:08:57.000Z</published>
    <updated>2018-11-06T03:27:52.558Z</updated>
    
    <content type="html"><![CDATA[<p>1.首先选择添加mysql数据库。<br><img src="http://pc59bkg3l.bkt.clouddn.com/1.png" alt="1"></p><p>2.填入对应的额mysql配置信息（其中数据库orm_lookup_demo应该事先被创建好）<br><img src="http://pc59bkg3l.bkt.clouddn.com/2.png" alt="2"></p><p>此时可以点击“Test Connections”测试是否连接成功，如果连接成功会出现:”succesfully”提示。<br>如果“Test Connections”按钮无法点击，说明没有安装对应的mysql java驱动（因为pyhcarm使用java语言编写）。<br>可以按下面的步骤快速安装：<br>（1）.点击“Test Connections”按钮下面的Mysql 跳转到 Driver配置界面。<br>（2）.点击下面途中的连接下载安装。<br>（3）.重新回到数据库连接界面发现可以执行“Test Connections”。</p><p><img src="http://pc59bkg3l.bkt.clouddn.com/3.png" alt="3"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.首先选择添加mysql数据库。&lt;br&gt;&lt;img src=&quot;http://pc59bkg3l.bkt.clouddn.com/1.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.填入对应的额mysql配置信息（其中数据库orm_lookup_demo应该事先被创建好）&lt;br
      
    
    </summary>
    
      <category term="工具" scheme="http://puguojing.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="数据库" scheme="http://puguojing.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://puguojing.com/tags/MySQL/"/>
    
      <category term="PyCharm" scheme="http://puguojing.com/tags/PyCharm/"/>
    
  </entry>
  
  <entry>
    <title>Mysql中的外键</title>
    <link href="http://puguojing.com/2018/10/06/Mysql%E4%B8%AD%E7%9A%84%E5%A4%96%E9%94%AE/"/>
    <id>http://puguojing.com/2018/10/06/Mysql中的外键/</id>
    <published>2018-10-06T08:54:06.000Z</published>
    <updated>2018-11-06T03:17:33.735Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mysql中的外键foreign-key"><a href="#mysql中的外键foreign-key" class="headerlink" title="mysql中的外键foreign key"></a>mysql中的外键foreign key</h3><h4 id="一、如果一张表中有一个非主键的字段指向了别一张表中的主键，就将该字段叫做外键。"><a href="#一、如果一张表中有一个非主键的字段指向了别一张表中的主键，就将该字段叫做外键。" class="headerlink" title="一、如果一张表中有一个非主键的字段指向了别一张表中的主键，就将该字段叫做外键。"></a>一、如果一张表中有一个非主键的字段指向了别一张表中的主键，就将该字段叫做外键。</h4><p>　　一张表中可以有多个外键。</p><p>　　外键的默认作用有两点：</p><p>　　1.对子表(外键所在的表)的作用：子表在进行写操作的时候，如果外键字段在父表中找不到对应的匹配，操作就会失败。</p><p>　　2.对父表的作用：对父表的主键字段进行删和改时，如果对应的主键在子表中被引用，操作就会失败。</p><p>外键的定制作用—-三种约束模式：</p><ul><li><p>district：严格模式(默认), 父表不能删除或更新一个被子表引用的记录。</p></li><li><p>cascade：级联模式, 父表操作后，子表关联的数据也跟着一起操作。</p></li><li><p>set null：置空模式,前提外键字段允许为NLL,  父表操作后，子表对应的字段被置空。</p></li></ul><p>　　使用外键的前提：</p><p>　　1. 表储存引擎必须是innodb，否则创建的外键无约束效果。</p><p>　　2. 外键的列类型必须与父表的主键类型完全一致。</p><p>　　3. 外键的名字不能重复。</p><p>　　4. 已经存在数据的字段被设为外键时，必须保证字段中的数据与父表的主键数据对应起来。</p><h4 id="二、新增外键"><a href="#二、新增外键" class="headerlink" title="二、新增外键"></a>二、新增外键</h4><ol><li>在创建时增加</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">create table my_tab1(</span><br><span class="line"></span><br><span class="line">　　　id int primary key auto_increment,</span><br><span class="line"></span><br><span class="line">　　　name varchar(10) not null,</span><br><span class="line"></span><br><span class="line">　　　class int,</span><br><span class="line"></span><br><span class="line">　　　foreign key(class)　references my_tab2(主键字段名);</span><br><span class="line"></span><br><span class="line">　　　)charset utf8;</span><br></pre></td></tr></table></figure><p>　　　</p><ol start="2"><li>在创建好的表中增加</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table my_tab1 add [constraint 外键名] foreign key(外键字段名) references mytab2(主键字段名);</span><br></pre></td></tr></table></figure><h4 id="三、删除外键"><a href="#三、删除外键" class="headerlink" title="三、删除外键"></a>三、删除外键</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table my_tab drop foreign key 外键名字;</span><br></pre></td></tr></table></figure><p>　　</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;mysql中的外键foreign-key&quot;&gt;&lt;a href=&quot;#mysql中的外键foreign-key&quot; class=&quot;headerlink&quot; title=&quot;mysql中的外键foreign key&quot;&gt;&lt;/a&gt;mysql中的外键foreign key&lt;/h3&gt;&lt;
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="数据库" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Python" scheme="http://puguojing.com/tags/Python/"/>
    
      <category term="数据库" scheme="http://puguojing.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://puguojing.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>python3 与 Django 连接数据库Error loading MySQL db module解决方案</title>
    <link href="http://puguojing.com/2018/09/30/python3%20%E4%B8%8E%20Django%20%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93Error%20loading%20MySQLdb%20module%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://puguojing.com/2018/09/30/python3 与 Django 连接数据库Error loading MySQLdb module解决方案/</id>
    <published>2018-09-30T09:11:41.000Z</published>
    <updated>2018-11-06T03:18:35.276Z</updated>
    
    <content type="html"><![CDATA[<p>学习Django时候，采用MySQL作为后台数据库，在执行<br><code>python3 manage.py startapp appname</code><br>创建app时遇到如下问题:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">django.core.exceptions.ImproperlyConfigured: Error loading MySQLdb module.</span><br><span class="line">Did you install mysqlclient?</span><br></pre></td></tr></table></figure><p>完整报错如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/db/backends/mysql/base.py&quot;, line 15, in &lt;module&gt;</span><br><span class="line">    import MySQLdb as Database</span><br><span class="line">ModuleNotFoundError: No module named &apos;MySQLdb&apos;</span><br><span class="line"></span><br><span class="line">The above exception was the direct cause of the following exception:</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;manage.py&quot;, line 15, in &lt;module&gt;</span><br><span class="line">    execute_from_command_line(sys.argv)</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/core/management/__init__.py&quot;, line 381, in execute_from_command_line</span><br><span class="line">    utility.execute()</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/core/management/__init__.py&quot;, line 357, in execute</span><br><span class="line">    django.setup()</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/__init__.py&quot;, line 24, in setup</span><br><span class="line">    apps.populate(settings.INSTALLED_APPS)</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/apps/registry.py&quot;, line 112, in populate</span><br><span class="line">    app_config.import_models()</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/apps/config.py&quot;, line 198, in import_models</span><br><span class="line">    self.models_module = import_module(models_module_name)</span><br><span class="line">  File &quot;/usr/local/Cellar/python3/3.6.3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/importlib/__init__.py&quot;, line 126, in import_module</span><br><span class="line">    return _bootstrap._gcd_import(name[level:], package, level)</span><br><span class="line">  File &quot;&lt;frozen importlib._bootstrap&gt;&quot;, line 994, in _gcd_import</span><br><span class="line">  File &quot;&lt;frozen importlib._bootstrap&gt;&quot;, line 971, in _find_and_load</span><br><span class="line">  File &quot;&lt;frozen importlib._bootstrap&gt;&quot;, line 955, in _find_and_load_unlocked</span><br><span class="line">  File &quot;&lt;frozen importlib._bootstrap&gt;&quot;, line 665, in _load_unlocked</span><br><span class="line">  File &quot;&lt;frozen importlib._bootstrap_external&gt;&quot;, line 678, in exec_module</span><br><span class="line">  File &quot;&lt;frozen importlib._bootstrap&gt;&quot;, line 219, in _call_with_frames_removed</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/contrib/auth/models.py&quot;, line 2, in &lt;module&gt;</span><br><span class="line">    from django.contrib.auth.base_user import AbstractBaseUser, BaseUserManager</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/contrib/auth/base_user.py&quot;, line 47, in &lt;module&gt;</span><br><span class="line">    class AbstractBaseUser(models.Model):</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/db/models/base.py&quot;, line 101, in __new__</span><br><span class="line">    new_class.add_to_class(&apos;_meta&apos;, Options(meta, app_label))</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/db/models/base.py&quot;, line 304, in add_to_class</span><br><span class="line">    value.contribute_to_class(cls, name)</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/db/models/options.py&quot;, line 203, in contribute_to_class</span><br><span class="line">    self.db_table = truncate_name(self.db_table, connection.ops.max_name_length())</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/db/__init__.py&quot;, line 33, in __getattr__</span><br><span class="line">    return getattr(connections[DEFAULT_DB_ALIAS], item)</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/db/utils.py&quot;, line 202, in __getitem__</span><br><span class="line">    backend = load_backend(db[&apos;ENGINE&apos;])</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/db/utils.py&quot;, line 110, in load_backend</span><br><span class="line">    return import_module(&apos;%s.base&apos; % backend_name)</span><br><span class="line">  File &quot;/usr/local/Cellar/python3/3.6.3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/importlib/__init__.py&quot;, line 126, in import_module</span><br><span class="line">    return _bootstrap._gcd_import(name[level:], package, level)</span><br><span class="line">  File &quot;/usr/local/lib/python3.6/site-packages/django/db/backends/mysql/base.py&quot;, line 20, in &lt;module&gt;</span><br><span class="line">    ) from err</span><br><span class="line">django.core.exceptions.ImproperlyConfigured: Error loading MySQLdb module.</span><br><span class="line">Did you install mysqlclient?</span><br></pre></td></tr></table></figure><p>原因分析：<br>在 python2 中，使用 pip install mysql-python  进行安装连接MySQL的库，使用时 import MySQLdb 进行使用</p><p>在 python3 中，改变了连接库，改为了 pymysql 库，但是在 Django 中， 连接数据库时使用的是 MySQLdb 库，这在与 python3 的合作中就会报以下错误了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django.core.exceptions.ImproperlyConfigured: Error loading MySQLdb module: No module named &apos;MySQLdb&apos;</span><br></pre></td></tr></table></figure><p>使用pip install pymysql 进行安装，直接导入即可使用。</p><h4 id="1-安装pymsql"><a href="#1-安装pymsql" class="headerlink" title="1. 安装pymsql"></a>1. 安装pymsql</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pymysql</span><br></pre></td></tr></table></figure><h4 id="2-安装完毕，打开项目的init-py-添加代码"><a href="#2-安装完毕，打开项目的init-py-添加代码" class="headerlink" title="2. 安装完毕，打开项目的init.py,添加代码"></a>2. 安装完毕，打开项目的<em>init</em>.py,添加代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import pymysql </span><br><span class="line">pymysql.install_as_MySQLdb()</span><br></pre></td></tr></table></figure><p>重新执行<code>python3 manage.py startapp appname</code>创建app成功。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;学习Django时候，采用MySQL作为后台数据库，在执行&lt;br&gt;&lt;code&gt;python3 manage.py startapp appname&lt;/code&gt;&lt;br&gt;创建app时遇到如下问题:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;ta
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="数据库" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Python" scheme="http://puguojing.com/tags/Python/"/>
    
      <category term="MySQL" scheme="http://puguojing.com/tags/MySQL/"/>
    
      <category term="Django" scheme="http://puguojing.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>虚拟环境virtualenv和virtualenvwrapper的使用</title>
    <link href="http://puguojing.com/2018/09/29/virtualenv%E5%92%8Cvirtualenvwrapper%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://puguojing.com/2018/09/29/virtualenv和virtualenvwrapper的使用/</id>
    <published>2018-09-29T06:11:44.000Z</published>
    <updated>2018-11-06T03:26:19.164Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-virtualenv虚拟环境的使用"><a href="#1-virtualenv虚拟环境的使用" class="headerlink" title="1.virtualenv虚拟环境的使用"></a>1.virtualenv虚拟环境的使用</h3><h5 id="1-安装虚拟环境："><a href="#1-安装虚拟环境：" class="headerlink" title="1.安装虚拟环境："></a>1.安装虚拟环境：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv</span><br></pre></td></tr></table></figure><h5 id="2-创建虚拟环境"><a href="#2-创建虚拟环境" class="headerlink" title="2.创建虚拟环境"></a>2.创建虚拟环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv [虚拟环境的名称]</span><br></pre></td></tr></table></figure><p>会在当前路径中创建虚拟环境文件夹</p><h5 id="3-进入虚拟环境"><a href="#3-进入虚拟环境" class="headerlink" title="3.进入虚拟环境"></a>3.进入虚拟环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Windows:cd 到Script文件夹</span><br><span class="line">Linux/Mac： source path/虚拟环境/bin/activate</span><br></pre></td></tr></table></figure><h5 id="4-退出虚拟环境"><a href="#4-退出虚拟环境" class="headerlink" title="4.退出虚拟环境"></a>4.退出虚拟环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure><h5 id="5-创建虚拟环境的时候指定Python解释器："><a href="#5-创建虚拟环境的时候指定Python解释器：" class="headerlink" title="5.创建虚拟环境的时候指定Python解释器："></a>5.创建虚拟环境的时候指定Python解释器：</h5><p>当电脑有多个Python版本时，可以使用 -p 参数来指定Python解释器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv -p  [Python解释器路径]</span><br></pre></td></tr></table></figure><h2 id="建议使用-virtualenvwrapper"><a href="#建议使用-virtualenvwrapper" class="headerlink" title="建议使用 virtualenvwrapper"></a>建议使用 virtualenvwrapper</h2><p>使用virtualenv时每一次创建虚拟环境都会在当前目录下创建一个虚拟环境文件夹，如果创建太多会很混乱，使用virtualenvwrapper只会下用户文件夹下创建一个Env文件夹，所有的虚拟环境都放在这个Env里面，所以非常易于维护。</p><h5 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenvwrapper</span><br></pre></td></tr></table></figure><p>进行下面步骤配置：<br>1.创建目录用来存放虚拟环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir $HOME/.virtualenvs</span><br></pre></td></tr></table></figure><p>2.在~/.bash_profile中添加行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#声明虚拟环境的文件夹</span><br><span class="line">export WORKON_HOME=$HOME/.virtualenvs</span><br><span class="line">#声明虚拟环境使用的python版本（多pyhton版本情况，请填写自己的python版本解释器路径）</span><br><span class="line">export VIRTUALENVWRAPPER_PYTHON=/usr/bin/local/python3.6 </span><br><span class="line">#执行虚拟环境脚本生效</span><br><span class="line">source /usr/local/bin/virtualenvwrapper.sh</span><br></pre></td></tr></table></figure><p>3.运行以下命令使修改生效:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure><p>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜~ virtualenvwrapper</span><br></pre></td></tr></table></figure><p>如果提示：<code>not found command</code>或者<code>/usr/bin/python: No module named virtualenvwrapper</code>，说明未在正确的版本上安装virtualenv。</p><h5 id="1-创建虚拟环境"><a href="#1-创建虚拟环境" class="headerlink" title="1.创建虚拟环境"></a>1.创建虚拟环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkvirtualenv [虚拟环境名称]</span><br></pre></td></tr></table></figure><p>会在当前用户文件夹下创建一个Env文件夹，然后将虚拟环境安装到这个目录下。</p><h5 id="2-切换到虚拟环境"><a href="#2-切换到虚拟环境" class="headerlink" title="2.切换到虚拟环境"></a>2.切换到虚拟环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">workon  my_env</span><br></pre></td></tr></table></figure><h4 id="退出当前虚拟环境"><a href="#退出当前虚拟环境" class="headerlink" title="退出当前虚拟环境"></a>退出当前虚拟环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure><h5 id="3-删除某个虚拟环境"><a href="#3-删除某个虚拟环境" class="headerlink" title="3.删除某个虚拟环境"></a>3.删除某个虚拟环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rmvirtualenv my_env</span><br></pre></td></tr></table></figure><h5 id="4-列出所有虚拟环境"><a href="#4-列出所有虚拟环境" class="headerlink" title="4.列出所有虚拟环境"></a>4.列出所有虚拟环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsvirtualenv</span><br></pre></td></tr></table></figure><h5 id="5-进入某个虚拟环境"><a href="#5-进入某个虚拟环境" class="headerlink" title="5.进入某个虚拟环境"></a>5.进入某个虚拟环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cdvirtualenv my_env</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-virtualenv虚拟环境的使用&quot;&gt;&lt;a href=&quot;#1-virtualenv虚拟环境的使用&quot; class=&quot;headerlink&quot; title=&quot;1.virtualenv虚拟环境的使用&quot;&gt;&lt;/a&gt;1.virtualenv虚拟环境的使用&lt;/h3&gt;&lt;h5 i
      
    
    </summary>
    
      <category term="工具" scheme="http://puguojing.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="python" scheme="http://puguojing.com/categories/%E5%B7%A5%E5%85%B7/python/"/>
    
    
      <category term="virsualenv" scheme="http://puguojing.com/tags/virsualenv/"/>
    
      <category term="virtualenvwrapper" scheme="http://puguojing.com/tags/virtualenvwrapper/"/>
    
      <category term="虚拟环境" scheme="http://puguojing.com/tags/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>HTTP协议（1）</title>
    <link href="http://puguojing.com/2018/09/28/HTTP%E5%8D%8F%E8%AE%AE%EF%BC%881%EF%BC%89/"/>
    <id>http://puguojing.com/2018/09/28/HTTP协议（1）/</id>
    <published>2018-09-28T09:30:01.000Z</published>
    <updated>2018-11-06T03:14:14.002Z</updated>
    
    <content type="html"><![CDATA[<p>HTTP及超文本传输协议，用于在客户端和服务器之间传送数据，包括文本、图像、视频流都可以使用HTTP协议进行传输。</p><h4 id="1-1HTTP协议流程"><a href="#1-1HTTP协议流程" class="headerlink" title="1.1HTTP协议流程"></a>1.1HTTP协议流程</h4><ol><li>输入网址并按Enter键，比如访问：hhtp://mysite:8080/app/index.html。</li><li>浏览器通过域名系统查询mysite的真实IP，比如：212.34.98.20。</li><li>向服务器的8080端口发起TCP请求并建立链接。</li><li>发送HTTP请求的内容，包括访问的地址/app/index.html、访问方式GET、浏览器本身的产品等。</li><li>服务器返回/app/index.html中的数据，并作文Reponse发送给客户端，如果请求的不是一个文件，则服务器需要执行相应的代码，动态生成切返回给客户端。</li><li>浏览器收到结果后关闭于服务器的链接。</li><li>浏览器将收到的结果呈现在显示器上。</li></ol><p><code>注意:其中1、2不是HTTP解析的一部分。</code></p><p>如今的HTTP还允许客户端在一次HTTP请求之后不关闭TCP链接，以便之后第2次发送HTTP请求时复用该链接，以减少系统开销，此技术在HTTP中叫keep-alive。</p><h4 id="1-2HTTP消息结构"><a href="#1-2HTTP消息结构" class="headerlink" title="1.2HTTP消息结构"></a>1.2HTTP消息结构</h4><h5 id="1-Request消息结构"><a href="#1-Request消息结构" class="headerlink" title="1.Request消息结构"></a>1.Request消息结构</h5><p>Request是客户端向服务器发起请求时的请求结构。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">【请求方法】 【URL】【协议版本】</span><br><span class="line">【头字段1】：值</span><br><span class="line"> ...</span><br><span class="line">【头字段N】：值</span><br><span class="line"></span><br><span class="line">【消息体】</span><br></pre></td></tr></table></figure><p>Request消息结构由两部分组成，消息头和消息体。消息头必须遵循上述格式，消息体则没有固定格式。消息头和消息体之间使用一行空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET  /hello.txt HTTP/1.1</span><br><span class="line">Host:www.mysite.com</span><br><span class="line">Accept-Languange:en</span><br></pre></td></tr></table></figure><p>上面就是一个请求头结构。</p><h5 id="1-Reponse消息结构"><a href="#1-Reponse消息结构" class="headerlink" title="1.Reponse消息结构"></a>1.Reponse消息结构</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;HTTP及超文本传输协议，用于在客户端和服务器之间传送数据，包括文本、图像、视频流都可以使用HTTP协议进行传输。&lt;/p&gt;
&lt;h4 id=&quot;1-1HTTP协议流程&quot;&gt;&lt;a href=&quot;#1-1HTTP协议流程&quot; class=&quot;headerlink&quot; title=&quot;1.1HT
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="HTTP协议" scheme="http://puguojing.com/tags/HTTP%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>python生成器详解</title>
    <link href="http://puguojing.com/2018/09/15/Python%E7%94%9F%E6%88%90%E5%99%A8%E8%AF%A6%E8%A7%A3/"/>
    <id>http://puguojing.com/2018/09/15/Python生成器详解/</id>
    <published>2018-09-15T14:41:56.000Z</published>
    <updated>2018-11-06T03:19:48.855Z</updated>
    
    <content type="html"><![CDATA[<p>参考：</p><p><a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014317799226173f45ce40636141b6abc8424e12b5fb27000" target="_blank" rel="noopener">廖雪峰官网Python教程-生成器</a></p><p><a href="https://blog.csdn.net/pfm685757/article/details/49924099" target="_blank" rel="noopener">Python生成器generator之next和send运行流程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014317799226173f45ce40636141b6ab
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="python" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/python/"/>
    
    
      <category term="python" scheme="http://puguojing.com/tags/python/"/>
    
      <category term="生成器" scheme="http://puguojing.com/tags/%E7%94%9F%E6%88%90%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Python多线程（2）</title>
    <link href="http://puguojing.com/2018/09/09/Python%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%882%EF%BC%89/"/>
    <id>http://puguojing.com/2018/09/09/Python多线程（2）/</id>
    <published>2018-09-09T15:11:06.000Z</published>
    <updated>2018-11-06T03:18:53.931Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Lock、BoundedSemaphore（和Semaphore类似，不过不允许超过初始值）的使用："><a href="#Lock、BoundedSemaphore（和Semaphore类似，不过不允许超过初始值）的使用：" class="headerlink" title="Lock、BoundedSemaphore（和Semaphore类似，不过不允许超过初始值）的使用："></a>Lock、BoundedSemaphore（和Semaphore类似，不过不允许超过初始值）的使用：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">from atexit import register</span><br><span class="line">from random import randrange</span><br><span class="line">from threading import BoundedSemaphore,Lock,Thread</span><br><span class="line">from  time import sleep,ctime</span><br><span class="line"></span><br><span class="line">lock = Lock()</span><br><span class="line"></span><br><span class="line">MAX = 5</span><br><span class="line"></span><br><span class="line">candytray = BoundedSemaphore(MAX)</span><br><span class="line"></span><br><span class="line">def producer(loops):</span><br><span class="line"></span><br><span class="line">    print(&apos;producer loops:&apos;,loops)</span><br><span class="line">    lock.acquire()</span><br><span class="line"></span><br><span class="line">    for i in range(loops):</span><br><span class="line">        try:</span><br><span class="line">            candytray.release()#realse后Semaphore会增多相当于产生</span><br><span class="line">        except ValueError:</span><br><span class="line">            print(&apos;release fail all Semaphore &apos;)</span><br><span class="line">        else:</span><br><span class="line">            print(&apos;release(produce) ok&apos;)</span><br><span class="line"></span><br><span class="line">        sleep(randrange(3))</span><br><span class="line"></span><br><span class="line">    lock.release()</span><br><span class="line"></span><br><span class="line">def consumer(loops):</span><br><span class="line">    print(&apos;consumer loops:&apos;, loops)</span><br><span class="line">    lock.acquire()</span><br><span class="line"></span><br><span class="line">    for i in range(loops):</span><br><span class="line"></span><br><span class="line">        if candytray.acquire(False):#acquire后 Semaphore会减少</span><br><span class="line">            print(&apos;acquire(consumer) ok&apos;)</span><br><span class="line">        else:</span><br><span class="line">            print(&apos;acquire fail  empty&apos;)</span><br><span class="line"></span><br><span class="line">        sleep(randrange(3))</span><br><span class="line"></span><br><span class="line">    lock.release()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    n=randrange(2,6)</span><br><span class="line"></span><br><span class="line">    Thread(target=consumer,args=(randrange(n,n+MAX+2),)).start()</span><br><span class="line"></span><br><span class="line">    Thread(target=producer, args=(n,)).start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@register</span><br><span class="line">def _atexit():</span><br><span class="line">    print(&apos;DONE :&apos;,ctime())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Lock、BoundedSemaphore（和Semaphore类似，不过不允许超过初始值）的使用：&quot;&gt;&lt;a href=&quot;#Lock、BoundedSemaphore（和Semaphore类似，不过不允许超过初始值）的使用：&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="python" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/python/"/>
    
    
      <category term="Python" scheme="http://puguojing.com/tags/Python/"/>
    
      <category term="线程" scheme="http://puguojing.com/tags/%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>项目-learning-log（3）</title>
    <link href="http://puguojing.com/2018/09/09/%E9%A1%B9%E7%9B%AE-learning-log%EF%BC%883%EF%BC%89/"/>
    <id>http://puguojing.com/2018/09/09/项目-learning-log（3）/</id>
    <published>2018-09-09T14:11:06.000Z</published>
    <updated>2018-11-06T03:16:26.191Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h3><p>–<br>在本篇中，我们将：<br>·使用Bootstrap库设置样式；<br>·把项目部署到Heroku上。</p><h3 id="2-设置项目“学习笔记”的样式"><a href="#2-设置项目“学习笔记”的样式" class="headerlink" title="2. 设置项目“学习笔记”的样式"></a>2. 设置项目“学习笔记”的样式</h3><p>–</p><p>之前关注的都是项目的功能，现在来为项目添加样式。</p><p>我们将使用django-bootstrap3来设置样式。首先请在虚拟环境中安装这个第三方库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-bootstrap3</span><br></pre></td></tr></table></figure><p>然后像之前在项目settings.py中注册我们自己编写的APP一样，注册bootstrap3这个应用程序。</p><p>还需要包含django-bootstrap3包含jQuery，在settings.py末尾添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">LOGIN_URL = &apos;/users/login/&apos;</span><br><span class="line"></span><br><span class="line"># django-bootstrap3的设置</span><br><span class="line">BOOTSTRAP3 = &#123;</span><br><span class="line">    &quot;include_jquery&quot;: True,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.1-2.2参看<a href="https://segmentfault.com/a/1190000015098870" target="_blank" rel="noopener">原文链接</a></p><h3 id="2-3-设置登录页面样式"><a href="#2-3-设置登录页面样式" class="headerlink" title="2.3 设置登录页面样式"></a>2.3 设置登录页面样式</h3><p>–<br>此处与文中不同，我的<font color="#DC143C">login.html</font>中的<font color="#DC143C">form</font>无法通过<code>% bootstrap_form form %}</code>引用Bootstrap的样式.因此我的<font color="#DC143C">login.html</font>如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;登录&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&#123;% extends &quot;learning_logs/base.html&quot; %&#125;</span><br><span class="line">&#123;% load bootstrap3 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block header %&#125;</span><br><span class="line">    &lt;h2&gt;登录您的账户&lt;/h2&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"> &lt;form action=&quot;&#123;% url &apos;users:login&apos; %&#125;&quot; method=&quot;post&quot; class=&quot;form-signin&quot;&gt;</span><br><span class="line">        &#123;% csrf_token %&#125;</span><br><span class="line"></span><br><span class="line">        &lt;h2 class=&quot;form-signin-heading&quot;&gt;请登录&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">        &lt;input type=&quot;text&quot; id=&quot;username&quot; name=&quot;username&quot; value=&quot;&#123;&#123; username &#125;&#125;&quot; class=&quot;form-control&quot; placeholder=&quot;用户名&quot; required autofocus&gt;</span><br><span class="line"></span><br><span class="line">        &lt;input type=&quot;password&quot; id=&quot;password&quot; name=&quot;password&quot; value=&quot;&#123;&#123; password &#125;&#125;&quot; class=&quot;form-control&quot; placeholder=&quot;密码&quot; required&gt;</span><br><span class="line">        &lt;div class=&quot;checkbox&quot;&gt;</span><br><span class="line">          &lt;label&gt;</span><br><span class="line">            &lt;input type=&quot;checkbox&quot; value=&quot;remember-me&quot;&gt; Remember me</span><br><span class="line">          &lt;/label&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;button class=&quot;btn btn-lg btn-primary btn-block&quot; type=&quot;submit&quot;&gt;登录&lt;/button&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>2.4-2.6参看<a href="https://segmentfault.com/a/1190000015098870" target="_blank" rel="noopener">原文链接</a></p><h3 id="3-部署“学习笔记”"><a href="#3-部署“学习笔记”" class="headerlink" title="3. 部署“学习笔记”"></a>3. 部署“学习笔记”</h3><p>–<br>3.1-3.2参看<a href="https://segmentfault.com/a/1190000015098870" target="_blank" rel="noopener">原文链接</a></p><h4 id="3-3-为部署到Heroku而修改settings-py"><a href="#3-3-为部署到Heroku而修改settings-py" class="headerlink" title="3.3 为部署到Heroku而修改settings.py"></a>3.3 为部署到Heroku而修改settings.py</h4><p>–<br>此处<font color="#DC143C">setting.py</font>中的<font color="#DC143C"></font>与文中不同，文中如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">-- snip --</span><br><span class="line"># 书中的判断语句是 if os.getcwd() == &apos;/app&apos;: </span><br><span class="line"># 现在估计是Heroku升级了，改为了下面的语句，否则待会儿部署的时候会出错</span><br><span class="line">if os.environ[&apos;HOME&apos;] == &quot;/app&quot;:</span><br><span class="line">    import dj_database_url</span><br><span class="line"></span><br><span class="line">    DATABASES = &#123;</span><br><span class="line">        &quot;default&quot;: dj_database_url.config(default=&quot;postgres://localhost&quot;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 让request.is_secure()承认X-Forwarded-Proto头</span><br><span class="line">    SECURE_PROXY_HEADER = (&quot;HTTP_X_FORWARDED_PROTO&quot;, &quot;https&quot;)</span><br><span class="line"></span><br><span class="line">    # 支持所有的主机头（host header）</span><br><span class="line">    ALLOWED_HOSTS = [&quot;*&quot;]</span><br><span class="line"></span><br><span class="line">    # 静态资产配置</span><br><span class="line">    BASE_DIR = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line">    # 书中设置是这样的： STATIC_ROOT = &quot;staticfiles&quot;</span><br><span class="line">    STATIC_ROOT = os.path.join(BASE_DIR, &apos;static&apos;)</span><br><span class="line">    STATICFILES_DIRS = (</span><br><span class="line">        os.path.join(BASE_DIR, &quot;static&quot;),</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p>按照此种方式设置报错，提示<font color="#DC143C">STATICFILES_DIRS</font> 的<font color="#DC143C">STATIC_ROOT</font>不正确。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?: (staticfiles.E002) The STATICFILES_DIRS setting should not contain the STATIC_ROOT setting.</span><br></pre></td></tr></table></figure><p>修改为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"> # 静态资产配置</span><br><span class="line">    BASE_DIR = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line">    STATIC_ROOT = &quot;staticfiles&quot;#书中设置是这样的：</span><br><span class="line">    STATIC_URL = &apos;/static/&apos;</span><br><span class="line">    #STATIC_ROOT = os.path.join(BASE_DIR, &apos;/static/&apos;)#错误</span><br><span class="line">    #STATIC_ROOT = os.path.join(BASE_DIR, &quot;static/&quot;)  # 错误(staticfiles.E002) The STATICFILES_DIRS setting should not contain the STATIC_ROOT setting.</span><br><span class="line">    STATICFILES_DIRS = (</span><br><span class="line">        os.path.join(BASE_DIR, &quot;static&quot;),</span><br><span class="line"></span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p>最终执行成功。</p><h4 id="3-4-创建启动进程的Procfile"><a href="#3-4-创建启动进程的Procfile" class="headerlink" title="3.4 创建启动进程的Procfile"></a>3.4 创建启动进程的Procfile</h4><p>–</p><p><font color="#DC143C">Procfile</font>告诉<font color="#DC143C">Heroku</font>启动那些进程，以便能够正确地提供项目支持的服务。这个文件只包含一行，文件名为<font color="#DC143C">Procfile</font>，不带扩展名，保存到项目根目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">web: gunicorn learning_log.wsgi --log-file -</span><br></pre></td></tr></table></figure><p>这段代码让<font color="#DC143C">Heroku</font>将<font color="#DC143C">gunicorn</font>用过服务器，并使用<font color="#DC143C">learning_log/wsgi.py</font>中的设置来启动应用程序。标志<font color="#DC143C">log-file</font>告诉<font color="#DC143C">Heroku</font>应将哪些类型的时间写入日志。注意最后的“-”不能省略</p><h4 id="3-14-部署总结"><a href="#3-14-部署总结" class="headerlink" title="3.14 部署总结"></a>3.14 部署总结</h4><p>–<br>从前面这些例子可看出，开发与部署的过程如下：</p><p>①修改项目。如果创建了新文件，使用命令 <code>git add .</code>（最后有个句点！）将它们加到Git仓库中。如果要迁移数据库，也需要执行该命令，因为每个迁移都生成了新的迁移文件。</p><p>②执行 <code>git commit -am &quot;commit message&quot;</code>，将修改提交到仓库。</p><p>③执行 <code>git push heroku master</code> 将修改推送到服务器。</p><p>④如果本地迁移了数据库，也需要迁移在线数据库，可以使用一次性命令 <code>heroku run python manage.py migrate</code>，也可以使用 <code>heroku run bash</code>打开一个远程终端会话，再执行迁移。</p><h4 id="3-15-设置SECRET-KEY"><a href="#3-15-设置SECRET-KEY" class="headerlink" title="3.15 设置SECRET_KEY"></a>3.15 设置SECRET_KEY</h4><p>–<br>Django根据<font color="#DC143C">settings.py</font>中的<font color="#DC143C">SECRET_KEY</font>来实现大量的安全协议。本项目中设置的<font color="#DC143C">SECRET_KEY</font>对一个练习项目来说已经足够了，但是对于生产网站，请务必认真对待这个值。</p><h4 id="3-16-将项目从Heroku删除"><a href="#3-16-将项目从Heroku删除" class="headerlink" title="3.16 将项目从Heroku删除"></a>3.16 将项目从Heroku删除</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(ll_env)learning_log$ heroku apps:destroy --app appname</span><br></pre></td></tr></table></figure><p>现在可以访问这个网站 <a href="https://pgj-learning-log.herokuapp.com" target="_blank" rel="noopener">https://pgj-learning-log.herokuapp.com</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1. 前言&quot;&gt;&lt;/a&gt;1. 前言&lt;/h3&gt;&lt;p&gt;–&lt;br&gt;在本篇中，我们将：&lt;br&gt;·使用Bootstrap库设置样式；&lt;br&gt;·把项目部署到Heroku上。&lt;/p&gt;

      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="项目" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="Bootstrap" scheme="http://puguojing.com/tags/Bootstrap/"/>
    
      <category term="Heroku" scheme="http://puguojing.com/tags/Heroku/"/>
    
      <category term="部署" scheme="http://puguojing.com/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>Python多线程（1）</title>
    <link href="http://puguojing.com/2018/09/09/Python%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%881%EF%BC%89/"/>
    <id>http://puguojing.com/2018/09/09/Python多线程（1）/</id>
    <published>2018-09-09T14:11:06.000Z</published>
    <updated>2018-11-06T03:18:42.285Z</updated>
    
    <content type="html"><![CDATA[<p>&#8195;&#8195;</p><h4 id="1-进程"><a href="#1-进程" class="headerlink" title="1.进程"></a>1.进程</h4><p>&#8195;&#8195;计算机程序知识存储在磁盘上的可执行二进制（或其他类型）文件，只有把他们加载到内存中并被操作系统调用，才拥有生命周期，进程是一个执行中的程序，每个进程都拥有自己的地址空间、内存、数据栈以及其他用于跟踪的辅助数据。由于进程之间相互独立，所以只能采用进程间通信(IPC)的方式共享信息。</p><h4 id="2-线程"><a href="#2-线程" class="headerlink" title="2.线程"></a>2.线程</h4><p>&#8195;&#8195;线程与进程类似，不过他是在同一个进程下执行的，所以共享上下文。</p><h4 id="3-全局解释锁-GIL"><a href="#3-全局解释锁-GIL" class="headerlink" title="3.全局解释锁(GIL)"></a>3.全局解释锁(GIL)</h4><p>&#8195;&#8195;Python代码的执行是由Python解释器（解释器主循环）进行控制的，在主循环中同时只能有一个线程在执行，就像单核CPU的多进程一样。尽管Python解释器可以运行多个线程，但是在任意给定的时刻只能有一个线程会被解释器调用。<br>Python解释器将按照下面的过程执行：<br>1.设置GIL。<br>2.切换金一个线程去运行。<br>3.执行下面的操作之一 ：<br>    &#8195;&#8195;a.指定数量的字节码指令。<br>    &#8195;&#8195;b.线程主动让出控制权（可以调用time.sleep(0)来完成。<br>4.把线程切换回睡眠状态（切换出线程。<br>5.解锁GIL。<br>6.重复上述步骤。</p><p>&#8195;&#8195;在当调用外部代码（即任意C/C++扩展D额内置函数）时，GIL会保持锁定，直至函数执行结束(因为在这期间没有Python字节码计数）。编写扩展函数的程序员有能力解锁GIL。然而，作为Python开发者，你并不需要担心Pyhon代码会在这些情况下被锁住。</p><p>&#8195;&#8195;例如，对于任意面向I/O的Python例程(调用了内置操作系统的C代码那种)GIL会在I/O调用前被释放，以允许其他线程在I/O执行的时候运行。而对那些没有太多I/O操作的代码而言，更加倾向于在该线程整个<br>时间片内始终占有处理器。换句话说就是，<strong>I/O密集型的Python程序要比计算密集型的代码能够更好的利用多线程环境。</strong></p><p>&#8195;&#8195;关于解释器主循环和GIL可以才看源码<em>Python/ceval.c</em></p><h4 id="4-在Python中使用线程"><a href="#4-在Python中使用线程" class="headerlink" title="4.在Python中使用线程"></a>4.在Python中使用线程</h4><p>&#8195;&#8195;Python提供了多个模块来支持多线程编程，包括thread、threading，queue模块等。thread提供了基本的线程和锁定支持。threading模块提供了更高级别功能，更全面面的线程管理。queue模块，用户可以创建一个队列数据结构，用于在多线程之间进行共享。</p><p><strong>推荐使用更高级别的锁定模块threading，而不是使用thread模块。</strong></p><p>1.一个原因是低级别的thread模块入的同步原语很少只有Lock，而threading模块拥有Lock,Semephore、Condition、Event等多种同步机制。<br>2.另一个原因是thread对于进程何时退出没有控制，当主线程结束时，所有其他线程也都强制结束，不会发出警告或者进行适当的清理，所以他也不支持<strong>守护线程</strong>。</p><p> <strong>守护线程</strong></p><blockquote></blockquote><p>&#8195;&#8195;守护线程一般是一个等待客户端请求服务的服务器，如果没有客户端请求守护线程就是空闲的.如果把一个线程置为守护线程，就表示这个线程是不重要的。进程退出时不需要等待这个线程执行完成。</p><blockquote><p>&#8195;&#8195;如果主线程准备退出时不需要等待某些子线程完成，就可以为这些子线程设置守护线程标记。该标记值为真时，表示线程是不重要的，或者说线程只是用来等待客户端请求而不做任何其他事情。设置一个线程为守护线程需要在启动线程之前执行如下赋值语句：<code>thread.daemon = True</code></p></blockquote><h4 id="5-threaing模块下的Thread类"><a href="#5-threaing模块下的Thread类" class="headerlink" title="5.threaing模块下的Thread类"></a>5.threaing模块下的Thread类</h4><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>Thread对象的数据属性</td><td></td></tr><tr><td>Name</td><td>线程名</td></tr><tr><td>Ident</td><td>线程标志符</td></tr><tr><td>Daemon</td><td>守护线程标志</td></tr><tr><td>Thread对象方法</td><td></td></tr><tr><td><strong>init</strong>(group=NONE,target=None,name=None, args=(),kwargs{},verbose=None,daemon=None)</td><td>实例化一个线程对象，需要有一个可调用的target，以及其参数args或kwargs，还可以传递name或group参数，daemon会设置thread.daemon属性标志</td></tr><tr><td>Start()</td><td>开始执行线程</td></tr><tr><td>run()</td><td>定义线程功能的方法（通常在子类中进行重写）</td></tr><tr><td>jion()</td><td>直至启动的线程终止之前一直挂起。除非给出了timeout。否则会一直阻塞。</td></tr></tbody></table><p>代码案例一，创建Thread实例传给他一个可调用的函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">import threading</span><br><span class="line">from time import sleep,ctime</span><br><span class="line"></span><br><span class="line">loops_time = [4,2]</span><br><span class="line"></span><br><span class="line">def loop(nloop,nsec):</span><br><span class="line">    print(&apos;start loop :&apos;,nloop,&apos;at:&apos;,ctime())</span><br><span class="line">    sleep(nsec)</span><br><span class="line">    print(&apos;end   loop :&apos;, nloop, &apos;at:&apos;, ctime())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    print(&apos;starting at----------------- :&apos;,ctime())</span><br><span class="line"></span><br><span class="line">    test_thresds = []</span><br><span class="line"></span><br><span class="line">    for i in range(len(loops_time)):</span><br><span class="line">        t = threading.Thread(target=loop,args=(i,loops_time[i]))</span><br><span class="line">        test_thresds.append(t)</span><br><span class="line"></span><br><span class="line">    for i in range(len(loops_time)):</span><br><span class="line">        test_thresds[i].start()</span><br><span class="line"></span><br><span class="line">    for i in range(len(loops_time)):</span><br><span class="line">        test_thresds[i].join()</span><br><span class="line"></span><br><span class="line">    print(&apos;end at :-------------------&apos;, ctime())</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>代码案例二：创建Thread实例传给他一个可调用的<strong>类实例</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">import threading</span><br><span class="line">from time import sleep,ctime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">loops_time = [4,2]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class ThreadFunc(object):</span><br><span class="line">    def __init__(self,func,args,name=&apos;&apos;):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.args = args</span><br><span class="line">        self.func = func</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def __call__(self, *args, **kwargs):</span><br><span class="line">        self.func(*self.args)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def loop(nloop,nsec):</span><br><span class="line">    print(&apos;start loop :&apos;,nloop,&apos;at:&apos;,ctime())</span><br><span class="line">    sleep(nsec)</span><br><span class="line">    print(&apos;end   loop :&apos;, nloop, &apos;at:&apos;, ctime())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    print(&apos;starting at----------------- :&apos;,ctime())</span><br><span class="line"></span><br><span class="line">    test_thresds = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    for i in range(len(loops_time)):</span><br><span class="line">        t = threading.Thread(target=ThreadFunc(loop,args=(i,loops_time[i]),name=loop.__name__))</span><br><span class="line">        test_thresds.append(t)</span><br><span class="line"></span><br><span class="line">    for i in range(len(loops_time)):</span><br><span class="line">        test_thresds[i].start()</span><br><span class="line"></span><br><span class="line">    for i in range(len(loops_time)):</span><br><span class="line">        test_thresds[i].join()</span><br><span class="line"></span><br><span class="line">    print(&apos;end at :-------------------&apos;, ctime())</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>代码案例三，派生Thread子类，并创建子类实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">import threading</span><br><span class="line">from time import sleep,ctime</span><br><span class="line"></span><br><span class="line">loops_time = [4,2]</span><br><span class="line"></span><br><span class="line">class MyThread(threading.Thread):</span><br><span class="line">    def __init__(self,func,args,name=&apos;&apos;):</span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.name = name</span><br><span class="line">        self.args = args</span><br><span class="line">        self.func = func</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def getResult(self):</span><br><span class="line">        return self.res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def run(self):</span><br><span class="line">        self.res = self.func(*self.args)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def loop(nloop,nsec):</span><br><span class="line">    print(&apos;start loop :&apos;,nloop,&apos;at:&apos;,ctime())</span><br><span class="line">    sleep(nsec)</span><br><span class="line">    print(&apos;end   loop :&apos;, nloop, &apos;at:&apos;, ctime())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    print(&apos;starting at----------------- :&apos;,ctime())</span><br><span class="line"></span><br><span class="line">    test_thresds = []</span><br><span class="line"></span><br><span class="line">    for i in range(len(loops_time)):</span><br><span class="line">        t = MyThread(func=loop,args=(i,loops_time[i]),name=loop.__name__)</span><br><span class="line">        test_thresds.append(t)</span><br><span class="line"></span><br><span class="line">    for i in range(len(loops_time)):</span><br><span class="line">        test_thresds[i].start()</span><br><span class="line">        print(threading.enumerate())  # 当前活动的Thread对象列表</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    for i in range(len(loops_time)):</span><br><span class="line"></span><br><span class="line">        test_thresds[i].join()</span><br><span class="line"></span><br><span class="line">    print(&apos;end at :-------------------&apos;, ctime())</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;#8195;&amp;#8195;&lt;/p&gt;
&lt;h4 id=&quot;1-进程&quot;&gt;&lt;a href=&quot;#1-进程&quot; class=&quot;headerlink&quot; title=&quot;1.进程&quot;&gt;&lt;/a&gt;1.进程&lt;/h4&gt;&lt;p&gt;&amp;#8195;&amp;#8195;计算机程序知识存储在磁盘上的可执行二进制（或其他类型
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="python" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/python/"/>
    
    
      <category term="Python" scheme="http://puguojing.com/tags/Python/"/>
    
      <category term="线程" scheme="http://puguojing.com/tags/%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫Scrapy框架学习（1）</title>
    <link href="http://puguojing.com/2018/09/07/python%E7%88%AC%E8%99%ABScrapy%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/"/>
    <id>http://puguojing.com/2018/09/07/python爬虫Scrapy框架学习（1）/</id>
    <published>2018-09-07T15:13:09.000Z</published>
    <updated>2018-11-06T03:19:13.665Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Scrapy安装"><a href="#Scrapy安装" class="headerlink" title="Scrapy安装"></a>Scrapy安装</h3><p>Mac下构建Scrapy依赖库需要C编译器及开发头文件，他一般由Xcode提供，具体命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure><p>随后利用pip安装Scrapy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install Scrapy</span><br></pre></td></tr></table></figure><p>安装完成后验证安装，命令行输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Scrapy</span><br></pre></td></tr></table></figure><p>运行结果如下图说明安装成功：<br><img src="http://pc59bkg3l.bkt.clouddn.com/WX20180907-232308@2x.png" alt="WX20180907-232308@2x"></p><h3 id="Scrapy框架介绍"><a href="#Scrapy框架介绍" class="headerlink" title="Scrapy框架介绍"></a>Scrapy框架介绍</h3><p>Scrapy是一个基于Twisted的异步处理框架，是纯Python实现的爬虫框架。其架构清晰，模块之间耦合程度低，可扩展性极强，可以灵活完成各种需求。我们只需要定制开发几个模版就可以轻松实现一个爬虫。</p><p>Scrapy的架构框架如下图所示<br><img src="http://pc59bkg3l.bkt.clouddn.com/Scrapy架构图-详细.png" alt="Scrapy架构图-详细"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Scrapy安装&quot;&gt;&lt;a href=&quot;#Scrapy安装&quot; class=&quot;headerlink&quot; title=&quot;Scrapy安装&quot;&gt;&lt;/a&gt;Scrapy安装&lt;/h3&gt;&lt;p&gt;Mac下构建Scrapy依赖库需要C编译器及开发头文件，他一般由Xcode提供，具体命令如下
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="爬虫" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="http://puguojing.com/tags/Python/"/>
    
      <category term="爬虫" scheme="http://puguojing.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Scrapy" scheme="http://puguojing.com/tags/Scrapy/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫-selenium的使用（2）</title>
    <link href="http://puguojing.com/2018/08/30/selenium%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%882%EF%BC%89/"/>
    <id>http://puguojing.com/2018/08/30/selenium的使用（2）/</id>
    <published>2018-08-30T07:49:51.000Z</published>
    <updated>2018-11-06T03:20:39.254Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用selenium打开chrome浏览器百度进行搜索"><a href="#使用selenium打开chrome浏览器百度进行搜索" class="headerlink" title="使用selenium打开chrome浏览器百度进行搜索"></a>使用selenium打开chrome浏览器百度进行搜索</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line">from selenium.webdriver.common.by import By</span><br><span class="line">from selenium.webdriver.common.keys import Keys</span><br><span class="line">from selenium.webdriver.support import expected_conditions as EC</span><br><span class="line">from selenium.webdriver.support.wait import WebDriverWait</span><br><span class="line"></span><br><span class="line">import time</span><br><span class="line">brower = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    brower.get(&apos;https://www.baidu.com/&apos;)</span><br><span class="line">    input = brower.find_element_by_id(&apos;kw&apos;)#通过id寻找元素</span><br><span class="line">    input.send_keys(&apos;Python&apos;)#在找到的input输入框内输入Python</span><br><span class="line">    input.send_keys(Keys.ENTER)#输入键盘的Enter</span><br><span class="line">    wait = WebDriverWait(brower,10)#设置wait的超时时间</span><br><span class="line">    wait.until(EC.presence_of_element_located((By.ID,&apos;content_left&apos;)))#等待直到出现id是conten_left的元素加载出来的时候，最大等待时间不超过10秒</span><br><span class="line">    print(brower.current_url)#打印url</span><br><span class="line">    print(brower.get_cookies())#打印现在的cookies</span><br><span class="line">    print(brower.page_source)#打印网页源代码</span><br><span class="line"></span><br><span class="line">    time.sleep(5)</span><br><span class="line">except Exception as e:</span><br><span class="line">    print(e)</span><br><span class="line">finally:</span><br><span class="line">    brower.close()</span><br></pre></td></tr></table></figure><p>还可以使用其他浏览器，比如：Firefox、Edge、以及一些手机浏览器等</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">brower = webdriver.Chrome()</span><br><span class="line">brower = webdriver.Firefox()</span><br><span class="line">brower = webdriver.Edge()</span><br><span class="line">brower = webdriver.PhantomJS()</span><br><span class="line">brower = webdriver.Safari()</span><br></pre></td></tr></table></figure><p>注意每个浏览器都有自己对应的类似chrome浏览器的chromedriver驱动可执行文件。</p><h3 id="2使用selenium打开淘货搜索"><a href="#2使用selenium打开淘货搜索" class="headerlink" title="2使用selenium打开淘货搜索"></a>2使用selenium打开淘货搜索</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">brower = webdriver.Chrome()</span><br><span class="line">try:</span><br><span class="line">    brower.get(&apos;https://www.taobao.com/&apos;)</span><br><span class="line">    search_input = brower.find_element_by_id(&apos;q&apos;)</span><br><span class="line">    search_input.send_keys(&apos;iPhone&apos;)</span><br><span class="line">    time.sleep(2)</span><br><span class="line">    search_input.clear()</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    search_input.send_keys(&apos;iPad&apos;)</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    search_button = brower.find_element_by_class_name(&apos;btn-search&apos;)</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    search_button.click()</span><br><span class="line">    time.sleep(10)</span><br><span class="line">except Exception as e:</span><br><span class="line">    print(e)</span><br><span class="line">finally:</span><br><span class="line">    brower.close()</span><br></pre></td></tr></table></figure><p>打开淘宝，搜索‘iPhone’然后删除，接着搜索‘iPad’</p><h3 id="3-动作链，实现拖拽"><a href="#3-动作链，实现拖拽" class="headerlink" title="3.动作链，实现拖拽"></a>3.动作链，实现拖拽</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">from selenium.webdriver import ActionChains</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">brower = webdriver.Chrome()</span><br><span class="line">try:</span><br><span class="line">    url = &apos;http://www.runoob.com/try/try.php?filename=jqueryui-api-droppable&apos;</span><br><span class="line">    brower.get(url)</span><br><span class="line">    brower.switch_to.frame(&apos;#iframeResult&apos;)#切换到子页面中&apos;iframeResult&apos;是子页面的id名，也可以根据name inex 甚至webElement对象定位</span><br><span class="line">    source = brower.find_element_by_css_selector(&apos;#draggable&apos;)</span><br><span class="line">    target = brower.find_element_by_css_selector(&apos;#droppable&apos;)</span><br><span class="line">    actions = ActionChains(brower)#构建action</span><br><span class="line">    actions.drag_and_drop(source,target)#</span><br><span class="line">    actions.perform()#调用perform()就是执行上面的动作链</span><br><span class="line">except Exception as e:</span><br><span class="line">    print(e)</span><br><span class="line">finally:</span><br><span class="line">    brower.close()</span><br></pre></td></tr></table></figure><p>ActionChains是什么呢？顾名思义，是一个动作链，如果在一个用例中只有一两个动作，那么用之前讲过的简单版的就可以了，如果动作很复杂，那么可以使用这个了。</p><p>1.ActionChains是自动执行低级交互的一种方式，例如：鼠标移动，鼠标点按，键盘操作，文本操作等。<br>2.当我们调用这里的方法时，这些操作会被先储存在一个队列中，当我们调用perform()方法时，队列中的操作会被按顺序执行，执行后队列被清空。</p><h4 id="iframe的切换"><a href="#iframe的切换" class="headerlink" title="iframe的切换"></a>iframe的切换</h4><p><a href="https://blog.csdn.net/huilan_same/article/details/52200586" target="_blank" rel="noopener">参看网址:https://blog.csdn.net/huilan_same/article/details/52200586</a><br>frame标签有frameset、frame、iframe三种，frameset跟其他普通标签没有区别，不会影响到正常的定位，而frame与iframe对selenium定位而言是一样的，selenium有一组方法对frame进行操作。</p><h5 id="1-怎么切到frame中-switch-to-frame"><a href="#1-怎么切到frame中-switch-to-frame" class="headerlink" title="1.怎么切到frame中(switch_to.frame())"></a>1.怎么切到frame中(switch_to.frame())</h5><p>selenium提供了switch_to.frame()方法来切换frame</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">switch_to.frame(reference)</span><br></pre></td></tr></table></figure><p>不得不提到switch_to_frame()，很多人在这样写的时候会发现，这句话被划上了删除线，原因是这个方法已经out了，之后很有可能会不支持，建议的写法是switch_to.frame()</p><p>reference是传入的参数，用来定位frame，可以传入id、name、index以及selenium的WebElement对象，假设有如下HTML代码 index.html：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;FrameTest&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;iframe src=&quot;a.html&quot; id=&quot;frame1&quot; name=&quot;myframe&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>想要定位其中的iframe并切进去，可以通过如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line">driver = webdriver.Firefox()</span><br><span class="line">driver.switch_to.frame(0)  # 1.用frame的index来定位，第一个是0</span><br><span class="line"># driver.switch_to.frame(&quot;frame1&quot;)  # 2.用id来定位</span><br><span class="line"># driver.switch_to.frame(&quot;myframe&quot;)  # 3.用name来定位</span><br><span class="line"># driver.switch_to.frame(driver.find_element_by_tag_name(&quot;iframe&quot;))  # 4.用WebElement对象来定位</span><br></pre></td></tr></table></figure><p>通常采用id和name就能够解决绝大多数问题。但有时候frame并无这两项属性，则可以用index和WebElement来定位：<br>1.index从0开始，传入整型参数即判定为用index定位，传入str参数则判定为用id/name定位<br>2.WebElement对象，即用find_element系列方法所取得的对象，我们可以用tag_name、xpath等来定位frame对象</p><p>比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;myframetest.html&quot; /&gt;</span><br></pre></td></tr></table></figure><p>用xpath定位，传入WebElement对象：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to.frame(driver.find_element_by_xpath(&quot;//iframe[contains(@src,&apos;myframe&apos;)]&quot;))</span><br></pre></td></tr></table></figure><h5 id="2-从frame中切回主文档-switch-to-default-content"><a href="#2-从frame中切回主文档-switch-to-default-content" class="headerlink" title="2.从frame中切回主文档(switch_to.default_content())"></a>2.从frame中切回主文档(switch_to.default_content())</h5><p>切到frame中之后，我们便不能继续操作主文档的元素，这时如果想操作主文档内容，则需切回主文档。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to.default_content()</span><br></pre></td></tr></table></figure><h5 id="3-嵌套frame的操作-switch-to-parent-frame"><a href="#3-嵌套frame的操作-switch-to-parent-frame" class="headerlink" title="3.嵌套frame的操作(switch_to.parent_frame())"></a>3.嵌套frame的操作(switch_to.parent_frame())</h5><p>有时候我们会遇到嵌套的frame，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;iframe id=&quot;frame1&quot;&gt;</span><br><span class="line">        &lt;iframe id=&quot;frame2&quot; / &gt;</span><br><span class="line">    &lt;/iframe&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>1.从主文档切到frame2，一层层切进去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to.frame(&quot;frame1&quot;)</span><br><span class="line">driver.switch_to.frame(&quot;frame2&quot;)</span><br></pre></td></tr></table></figure><p>2.从frame2再切回frame1，这里selenium给我们提供了一个方法能够从子frame切回到父frame，而不用我们切回主文档再切进来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to.parent_frame()  # 如果当前已是主文档，则无效果</span><br></pre></td></tr></table></figure><p>有了parent_frame()这个相当于后退的方法，我们可以随意切换不同的frame，随意的跳来跳去了。</p><p>所以只要善用以下三个方法，遇到frame分分钟搞定：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to.frame(reference)</span><br><span class="line">driver.switch_to.parent_frame()</span><br><span class="line">driver.switch_to.default_content()</span><br></pre></td></tr></table></figure><p>另外补充一下，之前曾看到过用点分法来切入嵌套frame的方法，但我试验之后发现并不能定位到frame：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to.frame(&apos;frame1.0.frame3&apos;)</span><br></pre></td></tr></table></figure><p>据说以上代码可以切到 “frame1” 下的 “第一个frame” 下的 “frame3” 中。</p><h3 id="Selenium官方文档"><a href="#Selenium官方文档" class="headerlink" title="Selenium官方文档"></a>Selenium官方文档</h3><p><a href="https://selenium-python-zh.readthedocs.io/en/latest/#" target="_blank" rel="noopener">点击查看Selenium官方文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;使用selenium打开chrome浏览器百度进行搜索&quot;&gt;&lt;a href=&quot;#使用selenium打开chrome浏览器百度进行搜索&quot; class=&quot;headerlink&quot; title=&quot;使用selenium打开chrome浏览器百度进行搜索&quot;&gt;&lt;/a&gt;使用sel
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="爬虫" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="http://puguojing.com/tags/Python/"/>
    
      <category term="爬虫" scheme="http://puguojing.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="selenium" scheme="http://puguojing.com/tags/selenium/"/>
    
  </entry>
  
  <entry>
    <title>selenium的使用（1）安装及环境配置</title>
    <link href="http://puguojing.com/2018/08/30/selenium%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%881%EF%BC%89/"/>
    <id>http://puguojing.com/2018/08/30/selenium的使用（1）/</id>
    <published>2018-08-30T07:49:51.000Z</published>
    <updated>2018-11-06T03:20:26.852Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装selenium"><a href="#1-安装selenium" class="headerlink" title="1.安装selenium"></a>1.安装selenium</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium</span><br></pre></td></tr></table></figure><h3 id="2-安装ChromeDriver"><a href="#2-安装ChromeDriver" class="headerlink" title="2.安装ChromeDriver"></a>2.安装ChromeDriver</h3><h4 id="2-1查看chrome版本："><a href="#2-1查看chrome版本：" class="headerlink" title="2.1查看chrome版本："></a>2.1查看chrome版本：</h4><p><img src="http://pc59bkg3l.bkt.clouddn.com/查看chrome版本.png" alt=""></p><p>我的版本是68.0 64 位，所以要下载对应的ChromeDriver版本，打开如下网址：<a href="https://chromedriver.storage.googleapis.com/index.html" target="_blank" rel="noopener">https://chromedriver.storage.googleapis.com/index.html</a></p><p><img src="http://pc59bkg3l.bkt.clouddn.com/22.png" alt=""></p><p>下拉找到对应自己chrome版本的ChromeDriver版本，我的Chrome版本是68.0对应的ChromeDriver版本是2.40。<br><img src="http://pc59bkg3l.bkt.clouddn.com/23.png" alt="23"></p><p>下面的是不同的chrome版本和对应的ChromeDriver版本对照表：第一列是ChromeDriver版本，第二列是chrome版本。</p><p>v2.40 v66-68<br>v2.39    v66-68<br>v2.38    v65-67<br>v2.37    v64-66<br>v2.36    v63-65<br>v2.35    v62-64<br>v2.34    v61-63<br>v2.33    v60-62<br>v2.32    v59-61<br>v2.31    v58-60<br>v2.30    v58-60<br>v2.29    v56-58<br>v2.28    v55-57<br>v2.27    v54-56<br>v2.26    v53-55<br>v2.25    v53-55<br>v2.24    v52-54<br>v2.23    v51-53<br>v2.22    v49-52<br>v2.21    v46-50<br>v2.20    v43-48<br>v2.19    v43-47<br>v2.18    v43-46<br>v2.17    v42-43<br>v2.13    v42-45<br>v2.15    v40-43<br>v2.14    v39-42<br>v2.13    v38-41<br>v2.12    v36-40<br>v2.11    v36-40<br>v2.10    v33-36<br>v2.9    v31-34<br>v2.8    v30-33<br>v2.7    v30-33<br>v2.6    v29-32<br>v2.5    v29-32<br>v2.4    v29-32</p><p>下载完成后会是一个chromedriver_mac64.zip压缩文件，解压后chromedriver是一个Unix可执行文件<br><img src="http://pc59bkg3l.bkt.clouddn.com/15356166053357.jpg" alt=""></p><p>接下来就需要配置环境变量让这个可执行文件在任意目录下可执行，你可以直接把它放到<code>/usr/bin</code>等已经存在环境变量路径的目录里，也可以新添加一条自己的路径：<br>首先新建一个文件目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /usr/local/chromedriver</span><br></pre></td></tr></table></figure><p>然后把‘chromedriver’这个可执行文件放到这个目录里,在‘chromedriver’这个可执行文件所在的目录下执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv chromedriver  /usr/local/chromedriver</span><br></pre></td></tr></table></figure><p>可以把文件放到该目录。</p><p>接着打开配置文件添加环境变量路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ./.bash_profile</span><br></pre></td></tr></table></figure><p>添加一行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=&quot;/usr/local/chromedriver:$PATH&quot;</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ./.bash_profile</span><br></pre></td></tr></table></figure><p>使修改生效，然后输入：<br><code>export</code>查看修改结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">~export</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">PATH=&apos;/usr/local/chromedriver:/usr/local/opt/imagemagick@6/bin:/Users/pgj/anaconda3/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/aria2/bin:/usr/local/share/dotnet:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/Applications/Wireshark.app/Contents/MacOS:/Applications/Xamarin Workbooks.app/Contents/SharedSupport/path-bin:/usr/local/mysql/bin&apos;</span><br><span class="line">PWD=/Users/pgj</span><br><span class="line">SHELL=/bin/zsh</span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>发现PATH中有：<code>/usr/local/chromedriver</code>目录路径（此路径一定要和chromedriver可执行文件所放目录一致，务必注意拼写错误），说明加入到环境变量成功。<br>之后关闭命令行终端重新打开命令行终端输入：<code>chromedriver</code><br>如果控制台有如下显示输出说明配置好了:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~ chromedriver</span><br><span class="line">Starting ChromeDriver 2.40.565386 (45a059dc425e08165f9a10324bd1380cc13ca363) on port 9515</span><br><span class="line">Only local connections are allowed.</span><br></pre></td></tr></table></figure><p>!!!注意该上述修改之后可能在运行代码是仍然会报：NOT FOUND chromedriver 错误，所以最好的办法就是直接把<code>chromedriver</code>可执行文件放入<code>usr/bin/</code>中。<br>其他浏览器也是同样类似的只需要下载对应的驱动文件放入<code>usr/bin/</code>中即可，比如Firefox浏览器就需要下载<code>GeckoDriver</code>，地址如下：<a href="https://github.com/mozilla/geckodriver/releases" target="_blank" rel="noopener">https://github.com/mozilla/geckodriver/releases</a></p><p>由于我的MAC版本是：10.13,系统开启了Rootless内核保护机制，所以需要关闭。（mac 从10.11及之后加入了Rootless内核保护机制）<br>关闭方法参考如下链接：<a href="http://www.pc6.com/edu/86809.html" target="_blank" rel="noopener">http://www.pc6.com/edu/86809.html</a><br>1.重启电脑开后按住 Command-R 进入恢复分区. 然后在 实用工具 栏找到 终端启动运行.<br>输入:<code>csrutil disable; reboot</code><br>2.你会看到系统保护被关闭的字样并且系统自动重启. 这样你就可以修改系统级别的文件了. 　<br>3.通过<code>csrutil status</code>来查询 Rootless 保护的状态.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~ csrutil status</span><br><span class="line">System Integrity Protection status: disabled.</span><br></pre></td></tr></table></figure><p>4.最后就是重新激活 Rootless的方法了. 终端内输入：<code>csrutil enable</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-安装selenium&quot;&gt;&lt;a href=&quot;#1-安装selenium&quot; class=&quot;headerlink&quot; title=&quot;1.安装selenium&quot;&gt;&lt;/a&gt;1.安装selenium&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="爬虫" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="http://puguojing.com/tags/Python/"/>
    
      <category term="selenium" scheme="http://puguojing.com/tags/selenium/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB（1）- python操作</title>
    <link href="http://puguojing.com/2018/08/29/MongoDB%EF%BC%881%EF%BC%89-%20python%E6%93%8D%E4%BD%9C/"/>
    <id>http://puguojing.com/2018/08/29/MongoDB（1）- python操作/</id>
    <published>2018-08-29T09:22:49.000Z</published>
    <updated>2018-11-06T03:16:46.302Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_39999535/article/details/81383196" target="_blank" rel="noopener">参考</a><br>常用MongoDB操作代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">import pymongo</span><br><span class="line">#brew install mongodb</span><br><span class="line">#新建一个文件夹/data/db 用于存放MangoDB数据</span><br><span class="line">#启动MongoDB服务：brew services start mongodb</span><br><span class="line">#sudo mongodb</span><br><span class="line">#停止MongoDB服务：brew services stop mongodb</span><br><span class="line">#重启MongoDB服务：brew services restart mongodb</span><br><span class="line"></span><br><span class="line"> #</span><br><span class="line">import pymongo</span><br><span class="line"></span><br><span class="line">#创建MongoDB连接对象</span><br><span class="line">client =  pymongo.MongoClient(host=&apos;localhost&apos;,port=27017)</span><br><span class="line">#client = pymongo.MongoClient(&apos;mongondb://localhost:27017/&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#指定或创建数据库</span><br><span class="line">db = client.testmongodb</span><br><span class="line">#db = client[&apos;testmongodb&apos;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#指定或创建集合(类似于table)</span><br><span class="line">collection = db.studens</span><br><span class="line">#collection = db[&apos;studens&apos;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#插入数据，数据以字典的形势表示</span><br><span class="line">data = &#123;</span><br><span class="line">    &apos;id&apos;:&apos;20180001&apos;,</span><br><span class="line">    &apos;name&apos;:&apos;Lio&apos;,</span><br><span class="line">    &apos;age&apos;:20</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#第一种方式，插入一条数据</span><br><span class="line">#result = collection.insert(data)</span><br><span class="line">#print(result)#5b866486623b564260fca3f7</span><br><span class="line"></span><br><span class="line">data_1 = &#123;</span><br><span class="line">    &apos;id&apos;:&apos;20180002&apos;,</span><br><span class="line">    &apos;name&apos;:&apos;mark&apos;,</span><br><span class="line">    &apos;age&apos;:21</span><br><span class="line">&#125;</span><br><span class="line">data_2 = &#123;</span><br><span class="line">    &apos;id&apos;:&apos;20180003&apos;,</span><br><span class="line">    &apos;name&apos;:&apos;kang&apos;,</span><br><span class="line">    &apos;age&apos;:24</span><br><span class="line">&#125;</span><br><span class="line">#第一种方式，插入多条数据</span><br><span class="line">#result = collection.insert([data_1,data_2])</span><br><span class="line">#print(result)#[ObjectId(&apos;5b866b6c623b5643595070b2&apos;), ObjectId(&apos;5b866b6c623b5643595070b3&apos;)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data_3 = &#123;</span><br><span class="line">    &apos;id&apos;:&apos;20180004&apos;,</span><br><span class="line">    &apos;name&apos;:&apos;lin&apos;,</span><br><span class="line">    &apos;age&apos;:25,</span><br><span class="line">    &apos;gender&apos;:&apos;male&apos;</span><br><span class="line">&#125;</span><br><span class="line">#第二种方式，插入一条数据</span><br><span class="line">#result = collection.insert_one(data_3)</span><br><span class="line">#print(result)#&lt;pymongo.results.InsertOneResult object at 0x10c1d3d88&gt;</span><br><span class="line">#print(type(result))#&lt;class &apos;pymongo.results.InsertOneResult&apos;&gt;</span><br><span class="line">#print(result.inserted_id)#5b866c5d623b5643904db0af</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data_4 = &#123;</span><br><span class="line">    &apos;id&apos;:&apos;20180005&apos;,</span><br><span class="line">    &apos;name&apos;:&apos;heler&apos;,</span><br><span class="line">    &apos;age&apos;:30,</span><br><span class="line">    &apos;gender&apos;:&apos;male&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data_5 = &#123;</span><br><span class="line">    &apos;id&apos;:&apos;20180006&apos;,</span><br><span class="line">    &apos;name&apos;:&apos;jay&apos;,</span><br><span class="line">    &apos;age&apos;:22,</span><br><span class="line">    &apos;gender&apos;:&apos;female&apos;</span><br><span class="line">&#125;</span><br><span class="line">#第二种方式插入多条数据</span><br><span class="line">#result = collection.insert_many([data_4,data_5])</span><br><span class="line">#print(result)#&lt;pymongo.results.InsertManyResult object at 0x109435ec8&gt;</span><br><span class="line">#print(type(result))#&lt;class &apos;pymongo.results.InsertManyResult&apos;&gt;</span><br><span class="line">#print(result.inserted_ids)#[ObjectId(&apos;5b866d0f623b5643c6acf070&apos;), ObjectId(&apos;5b866d0f623b5643c6acf071&apos;)]</span><br><span class="line"></span><br><span class="line">#####   推荐使用insert_one()和insert_many()</span><br><span class="line"></span><br><span class="line">#查询</span><br><span class="line">#可以使用find_one()和find（）方法进行查询，其中find_one()查询得到的是单条结果，find（）则是返回一个生成器对象</span><br><span class="line"></span><br><span class="line">#result = collection.find_one(&#123;&apos;name&apos;:&apos;Lio&apos;&#125;)</span><br><span class="line">#print(type(result))#&lt;class &apos;dict&apos;&gt;</span><br><span class="line">#print(result)#&#123;&apos;_id&apos;: ObjectId(&apos;5b866486623b564260fca3f7&apos;), &apos;id&apos;: &apos;20180001&apos;, &apos;name&apos;: &apos;Lio&apos;, &apos;age&apos;: 20&#125;</span><br><span class="line"></span><br><span class="line">#返回的是字典类型，其中数据多了一个_id属性他是MongoDB插入数据时自动添加的</span><br><span class="line">#此外我们可以根据ObjectId来查询，此时需要bson库中的objectid:</span><br><span class="line">#from bson.objectid import ObjectId</span><br><span class="line">#result = collection.find_one(&#123;&apos;_id&apos;:ObjectId(&apos;5b866486623b564260fca3f7&apos;)&#125;)</span><br><span class="line">#print(type(result))#&lt;class &apos;dict&apos;&gt;</span><br><span class="line">#print(result)#&#123;&apos;_id&apos;: ObjectId(&apos;5b866486623b564260fca3f7&apos;), &apos;id&apos;: &apos;20180001&apos;, &apos;name&apos;: &apos;Lio&apos;, &apos;age&apos;: 20&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#对于多条数据查询可以使用find</span><br><span class="line">#results = collection.find(&#123;&apos;age&apos;:30&#125;)</span><br><span class="line">#print(type(results))#&lt;class &apos;pymongo.cursor.Cursor&apos;&gt;</span><br><span class="line">#print(results)#&lt;pymongo.cursor.Cursor object at 0x10cd07160&gt;</span><br><span class="line">#for result in results:#&#123;&apos;_id&apos;: ObjectId(&apos;5b866d0f623b5643c6acf070&apos;), &apos;id&apos;: &apos;20180005&apos;, &apos;name&apos;: &apos;heler&apos;, &apos;age&apos;: 30, &apos;gender&apos;: &apos;male&apos;&#125;</span><br><span class="line">#    print(result)</span><br><span class="line"></span><br><span class="line">#返回的结果是cursor类型，相当于一个生成器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#条件查询</span><br><span class="line">#查询年龄大于20的数据</span><br><span class="line">#results = collection.find(&#123;&apos;age&apos;:&#123;&apos;$gt&apos;:20&#125;&#125;)</span><br><span class="line">#print(type(results))#&lt;class &apos;pymongo.cursor.Cursor&apos;&gt;</span><br><span class="line">#print(results)#&lt;pymongo.cursor.Cursor object at 0x10cf561d0&gt;</span><br><span class="line">#for result in results:#</span><br><span class="line">#    print(result)</span><br><span class="line">#查询结果：</span><br><span class="line">#&#123;&apos;_id&apos;: ObjectId(&apos;5b866b6c623b5643595070b2&apos;), &apos;id&apos;: &apos;20180002&apos;, &apos;name&apos;: &apos;mark&apos;, &apos;age&apos;: 21&#125;</span><br><span class="line">#&#123;&apos;_id&apos;: ObjectId(&apos;5b866b6c623b5643595070b3&apos;), &apos;id&apos;: &apos;20180003&apos;, &apos;name&apos;: &apos;kang&apos;, &apos;age&apos;: 24&#125;</span><br><span class="line">#&#123;&apos;_id&apos;: ObjectId(&apos;5b866c5d623b5643904db0af&apos;), &apos;id&apos;: &apos;20180004&apos;, &apos;name&apos;: &apos;lin&apos;, &apos;age&apos;: 25, &apos;gender&apos;: &apos;male&apos;&#125;</span><br><span class="line">#&#123;&apos;_id&apos;: ObjectId(&apos;5b866d0f623b5643c6acf070&apos;), &apos;id&apos;: &apos;20180005&apos;, &apos;name&apos;: &apos;heler&apos;, &apos;age&apos;: 30, &apos;gender&apos;: &apos;male&apos;&#125;</span><br><span class="line">#&#123;&apos;_id&apos;: ObjectId(&apos;5b866d0f623b5643c6acf071&apos;), &apos;id&apos;: &apos;20180006&apos;, &apos;name&apos;: &apos;jay&apos;, &apos;age&apos;: 22, &apos;gender&apos;: &apos;female&apos;&#125;</span><br><span class="line"></span><br><span class="line">#这里的查询条件是一个字典形式：意思是查询age大于20的信息,$gt是大于，其他常见入如下：</span><br><span class="line">#$lt       小于        &#123;&apos;age&apos;:&#123;&apos;$lt&apos;:20&#125;&#125;</span><br><span class="line">#$gt       大于        &#123;&apos;age&apos;:&#123;&apos;$gt&apos;:20&#125;&#125;</span><br><span class="line">#$lte       小于等于        &#123;&apos;age&apos;:&#123;&apos;$lte&apos;:20&#125;&#125;</span><br><span class="line">#$gte       大于等于        &#123;&apos;age&apos;:&#123;&apos;$gte&apos;:20&#125;&#125;</span><br><span class="line">#$ne       不等于        &#123;&apos;age&apos;:&#123;&apos;$ne&apos;:20&#125;&#125;</span><br><span class="line">#$in      在范围内        &#123;&apos;age&apos;:&#123;&apos;$in&apos;:[20,23]&#125;&#125;</span><br><span class="line">#$nin      不在范围内        &#123;&apos;age&apos;:&#123;&apos;$nin&apos;:[20,23]&#125;&#125;</span><br><span class="line">#$lt       小于        &#123;&apos;age&apos;:&#123;&apos;$t&apos;:20&#125;&#125;</span><br><span class="line"></span><br><span class="line">#还可以正则匹配</span><br><span class="line"></span><br><span class="line">#results = collection.find(&#123;&apos;name&apos;:&#123;&apos;$regex&apos;:&apos;^M.*&apos;&#125;&#125;)</span><br><span class="line"></span><br><span class="line">#&apos;$regex&apos;表示使用正则匹配，&apos;^M.*&apos;表示以M开头</span><br><span class="line">#其他：</span><br><span class="line">#$exists       属性是否存在       &#123;&apos;name&apos;:&#123;&apos;$exists&apos;:True&#125;&#125;      name的属性存在</span><br><span class="line">#$type         类型判断          &#123;&apos;age&apos;:&#123;&apos;$type&apos;:&apos;int&apos;&#125;&#125;        age的类型为int</span><br><span class="line">#$mod          数字模操作        &#123;&apos;age&apos;:&#123;&apos;$mod&apos;:&apos;[5,0]&apos;&#125;&#125;       年龄的模5余0</span><br><span class="line"></span><br><span class="line">#$text         文本查询          &#123;&apos;$text&apos;:&#123;&apos;$search&apos;:&apos;Mike&apos;&#125;&#125;   text类型的属性中包含Mike字符串</span><br><span class="line">#$where        高级条件查询       &#123;&apos;where&apos;:&apos;obj.fans_count == obj.follows_count&apos;&#125;       自身粉丝数等于关注数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#计数</span><br><span class="line">#可使用count函数统计查询的数据条数</span><br><span class="line"></span><br><span class="line">#count = collection.find(&#123;&apos;name&apos;:&#123;&apos;$regex&apos;:&apos;^.*&apos;&#125;&#125;).count()</span><br><span class="line">#print(count)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#排序</span><br><span class="line">#pymongo.ASCENDIN升序,pymongo.DESCENDING降序</span><br><span class="line">#results = collection.find().sort(&apos;name&apos;,pymongo.DESCENDING)</span><br><span class="line">#for result in results:</span><br><span class="line">#    print(result)</span><br><span class="line"></span><br><span class="line">#偏移</span><br><span class="line">#使用skip(2)，表示偏移几个位置，及忽略查询到的前面2条数据</span><br><span class="line">#使用limit(2)表示最多获取多少结果，限制获取的条数</span><br><span class="line">#！！！注意在庞大数据的时候（千万、亿级别）不要使用大偏移量来查询数据，可能导致内存溢出</span><br><span class="line">#可以使用类似如下操作:</span><br><span class="line">#from bson.objectid import ObjectId</span><br><span class="line">#collection.find(&#123;&apos;_id&apos;:&#123;&apos;$gt&apos;:&apos;5b866b6c623b5643595070b2&apos;&#125;&#125;)</span><br><span class="line">#这时只需要记录上次查询的id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#更新</span><br><span class="line">#使用update()方法更新</span><br><span class="line">#condition = &#123;&apos;name&apos;:&apos;Lio&apos;&#125;</span><br><span class="line">#result_1 = collection.find_one(condition)</span><br><span class="line">#print(result_1)</span><br><span class="line">#result_1[&apos;age&apos;] = 20</span><br><span class="line">#result_2 = collection.update(condition,result_1)</span><br><span class="line">#print(result_2)</span><br><span class="line"></span><br><span class="line">#这里我们需要先查询到要修改的数据，修改完之后使用udate()方法将修改后的数据传入</span><br><span class="line">#执行结果</span><br><span class="line">#&#123;&apos;_id&apos;: ObjectId(&apos;5b866486623b564260fca3f7&apos;), &apos;id&apos;: &apos;20180001&apos;, &apos;name&apos;: &apos;Lio&apos;, &apos;age&apos;: 20&#125;</span><br><span class="line">#&#123;&apos;n&apos;: 1, &apos;nModified&apos;: 0, &apos;ok&apos;: 1.0, &apos;updatedExisting&apos;: True&#125;</span><br><span class="line"></span><br><span class="line">#还可以使用 $set 进行更新,注意使用$set只会更新result_1字典里存在的字段，如果原先还有其他字段怎不会更新也不会删除</span><br><span class="line">#而如果不用$set，会把之前的数据全部用result_1替换，若原数据存在其他字段则会被删除</span><br><span class="line">#condition = &#123;&apos;name&apos;:&apos;Lio&apos;&#125;</span><br><span class="line">#result_1 = collection.find_one(condition)</span><br><span class="line">#print(result_1)</span><br><span class="line">#result_1[&apos;age&apos;] = 20</span><br><span class="line">#result_2 = collection.update(condition,&#123;&apos;$set&apos;:result_1&#125;)</span><br><span class="line">#print(result_2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#建议使用update_one()和update_many()，第二个参数不能直接使用字典要使用$类型操作符</span><br><span class="line">#使用matched_count(匹配的数据条数)和modified_count(影响的数据条数)查看结果</span><br><span class="line"></span><br><span class="line">#condition = &#123;&apos;name&apos;:&apos;Lio&apos;&#125;</span><br><span class="line">#result_1 = collection.find_one(condition)</span><br><span class="line"></span><br><span class="line">#result_1[&apos;age&apos;] = 22</span><br><span class="line">#result_2 = collection.update_one(condition,&#123;&apos;$set&apos;:result_1&#125;)</span><br><span class="line">#print(result_2)</span><br><span class="line">#print(result_2.matched_count,result_2.modified_count)</span><br><span class="line"></span><br><span class="line">#执行结果</span><br><span class="line">#&#123;&apos;_id&apos;: ObjectId(&apos;5b866486623b564260fca3f7&apos;), &apos;id&apos;: &apos;20180001&apos;, &apos;name&apos;: &apos;Lio&apos;, &apos;age&apos;: 20&#125;</span><br><span class="line">#&#123;&apos;n&apos;: 1, &apos;nModified&apos;: 1, &apos;ok&apos;: 1.0, &apos;updatedExisting&apos;: True&#125;</span><br><span class="line">#&lt;pymongo.results.UpdateResult object at 0x110dd2fc8&gt;</span><br><span class="line">#1 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#使用条件</span><br><span class="line">#表示查询年龄条件大于20的人，然后更新条件为&#123;&apos;$inc&apos;:&#123;&apos;age&apos;:1&#125;，表示age加1，执行后将会在爱满足条件的数据age字段加1</span><br><span class="line">#condition = &#123;&apos;age&apos;:&#123;&apos;$gt&apos;:20&#125;&#125;</span><br><span class="line">#result_2 = collection.update_one(condition,&#123;&apos;$inc&apos;:&#123;&apos;age&apos;:1&#125;&#125;)</span><br><span class="line">#print(result_2)</span><br><span class="line">#print(result_2.matched_count,result_2.modified_count)</span><br><span class="line"></span><br><span class="line">#执行结果：由于使用了update_one所以只影响了1条数据</span><br><span class="line">#&lt;pymongo.results.UpdateResult object at 0x10627bf48&gt;</span><br><span class="line">#1 1</span><br><span class="line"></span><br><span class="line">#使用update_many(),更新所有</span><br><span class="line">#condition = &#123;&apos;age&apos;:&#123;&apos;$gt&apos;:10&#125;&#125;</span><br><span class="line">#result_2s = collection.update_many(condition,&#123;&apos;$inc&apos;:&#123;&apos;age&apos;:1&#125;&#125;)</span><br><span class="line">#print(type(result_2s))</span><br><span class="line">#print(result_2s)</span><br><span class="line">#print(result_2s.matched_count,result_2s.modified_count)</span><br><span class="line"></span><br><span class="line">#执行结果</span><br><span class="line">#&lt;class &apos;pymongo.results.UpdateResult&apos;&gt;</span><br><span class="line">#&lt;pymongo.results.UpdateResult object at 0x10f76bfc8&gt;</span><br><span class="line">#6 6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#删除</span><br><span class="line">#result = collection.remove(&#123;&apos;name&apos;:&apos;heler&apos;&#125;)</span><br><span class="line">#print(result)   #&#123;&apos;n&apos;: 1, &apos;ok&apos;: 1.0&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#推荐使用delete_one()和delete_many()</span><br><span class="line">#result = collection.delete_one(&#123;&apos;name&apos;:&apos;lin&apos;&#125;)</span><br><span class="line">#print(result)   #&lt;pymongo.results.DeleteResult object at 0x10e8fadc8&gt;</span><br><span class="line">#print(result.deleted_count)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = collection.delete_many(&#123;&apos;age&apos;:&#123;&apos;$lt&apos;:26&#125;&#125;)</span><br><span class="line">print(result)   #&lt;pymongo.results.DeleteResult object at 0x10e40bdc8&gt;</span><br><span class="line">print(result.deleted_count) #4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#其他操作</span><br><span class="line">#find_one_and_delete()</span><br><span class="line">#find_one_and_replace()</span><br><span class="line">#find_one_and_update()</span><br><span class="line">#详见官方文档</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_39999535/article/details/81383196&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考&lt;/a&gt;&lt;br&gt;常用MongoDB操作代码：&lt;/p&gt;
&lt;fig
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="数据库" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="http://puguojing.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MongoDB" scheme="http://puguojing.com/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>mac下MySQL忘记密码如何重置？</title>
    <link href="http://puguojing.com/2018/08/28/Mysql%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://puguojing.com/2018/08/28/Mysql忘记密码解决办法/</id>
    <published>2018-08-28T15:20:31.000Z</published>
    <updated>2018-11-06T04:30:41.375Z</updated>
    
    <content type="html"><![CDATA[<h2 id="忘记Mysql密码如何重置？"><a href="#忘记Mysql密码如何重置？" class="headerlink" title="忘记Mysql密码如何重置？"></a>忘记Mysql密码如何重置？</h2><h4 id="step1："><a href="#step1：" class="headerlink" title="step1："></a>step1：</h4><p>　　苹果-&gt;系统偏好设置-&gt;最下边点mysql 在弹出页面中 关闭mysql服务（点击stop mysql server）　　</p><h4 id="step2："><a href="#step2：" class="headerlink" title="step2："></a>step2：</h4><p>　　进入终端输入：cd /usr/local/mysql/bin/<br>　　回车后 登录管理员权限 sudo su<br>　　回车后输入以下命令来禁止mysql验证功能 ./mysqld_safe –skip-grant-tables &amp;<br>　　回车后mysql会自动重启（偏好设置中mysql的状态会变成running）　　　　</p><h4 id="step3"><a href="#step3" class="headerlink" title="step3."></a>step3.</h4><p>　　输入命令 ./mysql<br>　　回车后，输入命令 FLUSH PRIVILEGES;<br>　　回车后，输入命令 ALTER USER ‘root‘@’localhost’ IDENTIFIED BY ‘password’;（会把密码重置为password，如果想改其他的把password替换即可）　<br>　　<br>　　完整步骤如下图:<br>　　<img src="media/15354371982475/%E5%BF%98%E8%AE%B0mysql%E5%AF%86%E7%A0%81%E5%8A%9E%E6%B3%95.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;忘记Mysql密码如何重置？&quot;&gt;&lt;a href=&quot;#忘记Mysql密码如何重置？&quot; class=&quot;headerlink&quot; title=&quot;忘记Mysql密码如何重置？&quot;&gt;&lt;/a&gt;忘记Mysql密码如何重置？&lt;/h2&gt;&lt;h4 id=&quot;step1：&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="数据库" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Python" scheme="http://puguojing.com/tags/Python/"/>
    
      <category term="数据库" scheme="http://puguojing.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://puguojing.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Mysql常用pyhon接口的实现：增、删、改、查</title>
    <link href="http://puguojing.com/2018/08/28/Mysql%E5%B8%B8%E7%94%A8pyhon%E6%8E%A5%E5%8F%A3%E7%9A%84%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/"/>
    <id>http://puguojing.com/2018/08/28/Mysql常用pyhon接口的代码实现/</id>
    <published>2018-08-28T15:20:31.000Z</published>
    <updated>2018-11-06T03:16:56.776Z</updated>
    
    <content type="html"><![CDATA[<p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">import pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">函数：CreateDatabase(Database_name)</span><br><span class="line">功能：创建数据库</span><br><span class="line">参数：Database_name：要创建的数据库名</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">def CreateDatabase(Database_name):</span><br><span class="line"></span><br><span class="line">    db = pymysql.connect(host=&apos;localhost&apos;,user=&apos;root&apos;,password=&apos;password&apos;,port=3306)</span><br><span class="line">    cursor = db.cursor()</span><br><span class="line">    cursor.execute(&apos;SELECT VERSION()&apos;)</span><br><span class="line">    data = cursor.fetchone()</span><br><span class="line">    print(&apos;DataBase Version:&apos;,data)</span><br><span class="line"></span><br><span class="line">    sql = &apos;CREATE DATABASE &#123;&#125; DEFAULT CHARACTER SET utf8&apos;.format(Database_name)</span><br><span class="line">    try:</span><br><span class="line">        cursor.execute(sql)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(&apos;Create %s error：&apos;%(Database_name), e)</span><br><span class="line"></span><br><span class="line">    db.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">函数：CreateTables(DataBase,table)</span><br><span class="line">功能：在指定数据库里面创建指定的表</span><br><span class="line">参数：1.DataBase：已经创建的数据库名</span><br><span class="line">     2.table：要创建的表名</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">def CreateTables(DataBase,table):</span><br><span class="line"></span><br><span class="line">    db = pymysql.connect(host=&apos;localhost&apos;, user=&apos;root&apos;, password=&apos;password&apos;, port=3306,db=DataBase)</span><br><span class="line">    cursor = db.cursor()</span><br><span class="line"></span><br><span class="line">    sql = &apos;CREATE TABLE IF NOT EXISTS &#123;&#125; (id VARCHAR(255) NOT NULL,user_name VARCHAR(255) NOT NULL, age INT NOT NULL, PRIMARY KEY (id))&apos;.format(table)</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        cursor.execute(sql)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(&apos;%s Create %s error：&apos;%(DataBase,table),e)</span><br><span class="line"></span><br><span class="line">    db.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">函数：Insert(DataBase,table,data)</span><br><span class="line">功能：在某一数据库的指定表中插入一条数据,如果该数据的key已经存在则会插入失败</span><br><span class="line">参数：1.DataBase：已经创建的数据库名</span><br><span class="line">     2.table：要创建的表名</span><br><span class="line">     3.data：要插入的数据，字典类型比如：  data = &#123;</span><br><span class="line">                                            &apos;id&apos;:&apos;20180001&apos;,</span><br><span class="line">                                            &apos;user_name&apos;:&apos;Bob&apos;,</span><br><span class="line">                                            &apos;age&apos;:20</span><br><span class="line">                                        &#125;</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">def Insert(DataBase,table,data):</span><br><span class="line"></span><br><span class="line">    db = pymysql.connect(host=&apos;localhost&apos;, user=&apos;root&apos;, password=&apos;password&apos;, port=3306, db=DataBase)</span><br><span class="line">    cursor = db.cursor()</span><br><span class="line"></span><br><span class="line">    keys = &apos;,&apos;.join(data.keys())#-&gt;id,user_name,age</span><br><span class="line">    values = &apos;,&apos;.join([&apos;%s&apos;] * len(data))#[&apos;a&apos;]*4 -&gt; [a,a,a,a]  &apos;,&apos;.join([a,a,a,a])-&gt;&apos;a,a,a,a&apos;</span><br><span class="line"></span><br><span class="line">    sql = &apos;INSERT INTO &#123;t&#125; (&#123;k&#125;) VALUES(&#123;v&#125;)&apos;.format(t=table,k=keys,v=values)#使用form格式化结果：INSERT INTO students (id,user_name,age) VALUES(%s,%s,%s)</span><br><span class="line">    print(sql)</span><br><span class="line">    try:</span><br><span class="line"></span><br><span class="line">        cursor.execute(sql, tuple(data.values()))</span><br><span class="line">        db.commit()</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(&quot;insert error&quot;, e)</span><br><span class="line">        db.rollback()</span><br><span class="line"></span><br><span class="line">    db.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">函数：Update(Database,table,data)</span><br><span class="line">功能：根据key更新某一数据库的指定表中的某一条数据，如果key存在在更新数据，不存在则插入数据</span><br><span class="line">参数：1.DataBase：已经创建的数据库名</span><br><span class="line">     2.table：要创建的表名</span><br><span class="line">     3.data：要更新或插入的数据，字典类型比如：  data = &#123;</span><br><span class="line">                                            &apos;id&apos;:&apos;20180002&apos;,</span><br><span class="line">                                            &apos;user_name&apos;:&apos;lio&apos;,</span><br><span class="line">                                            &apos;age&apos;:22</span><br><span class="line">                                        &#125;</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">def Update(Database,table,data):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">       data = &#123;</span><br><span class="line">               &apos;id&apos;:&apos;20180001&apos;,</span><br><span class="line">               &apos;user_name&apos;:&apos;Bob&apos;,</span><br><span class="line">               &apos;age&apos;:20</span><br><span class="line">           &#125;</span><br><span class="line">       &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    # table = &apos;students&apos;</span><br><span class="line">    db = pymysql.connect(host=&apos;localhost&apos;, user=&apos;root&apos;, password=&apos;password&apos;, port=3306, db=Database)</span><br><span class="line">    cursor = db.cursor()</span><br><span class="line"></span><br><span class="line">    keys = &apos;,&apos;.join(data.keys())      # -&gt;id,user_name,age</span><br><span class="line">    values = &apos;,&apos;.join([&apos;%s&apos;] * len(data))  # [&apos;a&apos;]*4 -&gt; [a,a,a,a]  &apos;,&apos;.join([a,a,a,a])-&gt;&apos;a,a,a,a&apos;</span><br><span class="line"></span><br><span class="line">    sql = &apos;INSERT INTO &#123;t&#125; (&#123;k&#125;) VALUES(&#123;v&#125;) ON DUPLICATE KEY UPDATE&apos;.format(t=table, k=keys, v=values)        # 使用format格式化INSERT INTO students (id,user_name,age) VALUES(%s,%s,%s) ON DUPLICATE KEY UPDATE</span><br><span class="line">    update = &apos;,&apos;.join(&apos; &#123;key&#125; = %s&apos;.format(key=key) for key in data)      #注意前面有空格，结果：&apos; id = %s,user_name = %s,age = %s&apos;</span><br><span class="line"></span><br><span class="line">                       #ON DUPLICATE KEY UPDATE 表示如果主键存在就执行UPDATE 而不是插入</span><br><span class="line">    sql += update      #结果：INSERT INTO students (id,user_name,age) VALUES(%s,%s,%s) ON DUPLICATE KEY UPDATE id = %s, user_name = %s, age = %s</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line"></span><br><span class="line">        cursor.execute(sql, tuple(data.values())*2)#使用了2次值，共6个%s</span><br><span class="line">        db.commit()</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(&quot;insert error&quot;, e)</span><br><span class="line">        db.rollback()</span><br><span class="line"></span><br><span class="line">    db.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">函数：Delete(Database,table,condition):</span><br><span class="line">功能：根据指定条件删除数据库某表中的满足条件的数据</span><br><span class="line">参数：1.DataBase：已经创建的数据库名</span><br><span class="line">     2.table：要创建的表名</span><br><span class="line">     3.condition：指定的SQL语句条件，比如：&apos;age &gt; 20&apos;,表示删除所有 age字段的值大于20的数据</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">def Delete(Database,table,condition):</span><br><span class="line"></span><br><span class="line">    db = pymysql.connect(host=&apos;localhost&apos;, user=&apos;root&apos;, password=&apos;password&apos;, port=3306, db=Database)</span><br><span class="line">    cursor = db.cursor()</span><br><span class="line"></span><br><span class="line">    sql = &apos;DELETE FROM &#123;tables&#125; WHERE &#123;conditions&#125;&apos;.format(tables=table,conditions=condition)</span><br><span class="line">    try:</span><br><span class="line">        cursor.execute(sql)</span><br><span class="line">        db.commit()</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(&quot;insert error&quot;, e)</span><br><span class="line">        db.rollback()</span><br><span class="line"></span><br><span class="line">    db.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">函数：Select(Database,table,condition)</span><br><span class="line">功能：从数据库某表中根据指定条件查询的满足条件的数据</span><br><span class="line">参数：1.DataBase：已经创建的数据库名</span><br><span class="line">     2.table：要创建的表名</span><br><span class="line">     3.condition：指定的SQL语句条件，比如：&apos;age &gt; 20&apos;,表示查询所有age字段的值大于20的数据</span><br><span class="line">返回值：列表，存储满足查询条件的信息，列表的每个元素是一条信息，用元组封装。</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">def Select(Database,table,condition):</span><br><span class="line"></span><br><span class="line">    db = pymysql.connect(host=&apos;localhost&apos;, user=&apos;root&apos;, password=&apos;password&apos;, port=3306, db=Database)</span><br><span class="line">    cursor = db.cursor()</span><br><span class="line"></span><br><span class="line">    sql = &apos;SELECT * FROM &#123;tablses&#125; WHERE &#123;conditions&#125;&apos;.format(tablses=table,conditions=condition)</span><br><span class="line">    result = []</span><br><span class="line">    try:</span><br><span class="line">        cursor.execute(sql)</span><br><span class="line">        row = cursor.fetchone()#row是以元组返回，row： (&apos;20180001&apos;, &apos;Bob&apos;, 20)</span><br><span class="line"></span><br><span class="line">        while row:</span><br><span class="line">            result.append(row)</span><br><span class="line">            row=cursor.fetchone()</span><br><span class="line"></span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(&quot;SELECT error&quot;, e)</span><br><span class="line"></span><br><span class="line">    db.close()</span><br><span class="line">    return result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line"></span><br><span class="line">    CreateDatabase(&apos;test_db&apos;)</span><br><span class="line"></span><br><span class="line">    CreateTables(&apos;test_db&apos;,&apos;test_db_table_1&apos;)</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">            &apos;id&apos;:&apos;20180004&apos;,</span><br><span class="line">            &apos;user_name&apos;:&apos;jack&apos;,</span><br><span class="line">            &apos;age&apos;:22</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    Insert(&apos;test_db&apos;,&apos;test_db_table_1&apos;,data)</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">            &apos;id&apos;:&apos;20180004&apos;,</span><br><span class="line">            &apos;user_name&apos;:&apos;jack&apos;,</span><br><span class="line">            &apos;age&apos;:25</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    Update(&apos;test_db&apos;,&apos;test_db_table_1&apos;,data)</span><br><span class="line"></span><br><span class="line">    #Delete(&apos;test_db&apos;,&apos;test_db_table_1&apos;,&apos;age &gt; 21&apos;)</span><br><span class="line"></span><br><span class="line">    result= Select(&apos;test_db&apos;,&apos;test_db_table_1&apos;,&apos;age &gt; 19&apos;)</span><br><span class="line"></span><br><span class="line">    print(result)</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;b
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="数据库" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Python" scheme="http://puguojing.com/tags/Python/"/>
    
      <category term="数据库" scheme="http://puguojing.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://puguojing.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫-爬取豆瓣书籍（1）</title>
    <link href="http://puguojing.com/2018/08/26/python%E7%88%AC%E8%99%AB-%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3%E4%B9%A6%E7%B1%8D%EF%BC%881%EF%BC%89/"/>
    <id>http://puguojing.com/2018/08/26/python爬虫-爬取豆瓣书籍（1）/</id>
    <published>2018-08-26T06:10:20.000Z</published>
    <updated>2018-11-06T03:19:03.116Z</updated>
    
    <content type="html"><![CDATA[<p>本篇记录使用Requests + Xpath爬取豆瓣书籍</p><h2 id="1-Requests"><a href="#1-Requests" class="headerlink" title="1.Requests"></a>1.Requests</h2><p>Requests是python的一个HTTP库，里面包含了常见的一些HTTP操作，下面是Requests常用的七种方法：</p><table><thead><tr><th style="text-align:center">方法</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">requests.request()</td><td style="text-align:center">构造一个请求，支撑以下方法的基础方法</td></tr><tr><td style="text-align:center">requests.get()</td><td style="text-align:center">获取HTML网页的主要方法，对应于HTTP的GET</td></tr><tr><td style="text-align:center">requests.head()</td><td style="text-align:center">获取HTML网页的信息头的方法，对应于HTTP的HEAD</td></tr><tr><td style="text-align:center">requests.post()</td><td style="text-align:center">向HTML网页提交POST请求的方法，对应于HTTP的POST</td></tr><tr><td style="text-align:center">requests.put()</td><td style="text-align:center">向HTML网页提交PUT请求的方法，对应于HTTP的PUT</td></tr><tr><td style="text-align:center">requests.patch()</td><td style="text-align:center">向HTML网页提交局部修改请求的方法，对应于HTTP的PATCH</td></tr><tr><td style="text-align:center">requests.delete()</td><td style="text-align:center">向HTML网页提交请删除求的方法，对应于HTTP的DELETE</td></tr></tbody></table><p>我们最常用的就是request.get()方法。</p><h2 id="Requests-get-的用法"><a href="#Requests-get-的用法" class="headerlink" title="Requests.get()的用法"></a>Requests.get()的用法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import requests#导入Requests库</span><br><span class="line">r = requests.get(url)#使用get方法发送请求，返回包含网页数据的Response并存储到对象r中</span><br></pre></td></tr></table></figure><h3 id="Response对象的属性"><a href="#Response对象的属性" class="headerlink" title="Response对象的属性"></a>Response对象的属性</h3><p><strong>r.statues.code:</strong> http请求的返回状态，200表示连接成功，404表示连接失败</p><p><strong>r.text：</strong>http响应内容的字符串形式，url对应的页面内容</p><p><strong>r.encoding：</strong>从HTTP header中猜测的响应内容编码方式</p><p><strong>r.apparent_encoding：</strong>从内容分析出的响应内容的编码方式（备选编码方式）</p><p><strong>r.content:</strong>HTTP响应内容的二进制形式</p><p><strong>r.headers：</strong>http响应内容的头部内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">resp.text返回的是Unicode型的数据。</span><br><span class="line"></span><br><span class="line">resp.content返回的是bytes型也就是二进制的数据。</span><br><span class="line"></span><br><span class="line">也就是说，如果你想取文本，可以通过r.text。</span><br><span class="line"></span><br><span class="line">如果想取图片，文件，则可以通过r.content。</span><br><span class="line"></span><br><span class="line">（resp.json()返回的是json格式数据）</span><br></pre></td></tr></table></figure><p><a href="http://docs.python-requests.org/zh_CN/latest/#" target="_blank" rel="noopener"><strong>查看Requestes开发文档</strong></a></p><h2 id="Xpath"><a href="#Xpath" class="headerlink" title="Xpath"></a>Xpath</h2><p>xpath即为XML路径语言（XML Path Language），他是一种用来确定XML文档中某部分位置的语言。<br>Xpath基于XML的树状结构，提供在数据结构树中找寻节点的能力。起初Xpath的提出初衷是将其做为一个通用的、介于Xpointer与XSL间的语法模型，但是很快Xpath被开发者采用来当作小型的查询语言。</p><h3 id="Xpath解析网页的流程"><a href="#Xpath解析网页的流程" class="headerlink" title="Xpath解析网页的流程"></a>Xpath解析网页的流程</h3><p>1.首先通过Requests库获取网页数据。<br>2.通过网页解析得到想要的数据或者新的链接。<br>3.网页解析可以通过Xpath或者其他的解析工具进行。Xpath，是一个非常友好的网页解析工具。</p><h3 id="lxml库"><a href="#lxml库" class="headerlink" title="lxml库"></a>lxml库</h3><p>lxml库结合libxml2快速强大的特性，使用xpath语法来进行文件格式解析，与Beautiful相比，效率更高。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install lxml</span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from lxml import etree #导入库</span><br><span class="line">data = requests.get(url).text#获取网页内容</span><br><span class="line">s = etree.HTML(data)#解析网页节点</span><br></pre></td></tr></table></figure><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">def craw_douban_book_top250():</span><br><span class="line">    msg_num = 0 #数量统计</span><br><span class="line">    for page in range(10):  #根据对网站分析，每页有25条信息，所有爬取10页共250条</span><br><span class="line">        url = &apos;https://book.douban.com/top250?start=&#123;&#125;&apos;.format(page*25)#每页的url地址最后刚好差25</span><br><span class="line"></span><br><span class="line">        data = requests.get(url).text #获取网页的内容</span><br><span class="line">        s = etree.HTML(data)   #解析HTML节点转换成对象</span><br><span class="line"></span><br><span class="line">        divs = s.xpath(&apos;//*[@id=&quot;content&quot;]/div/div[1]/div/table&apos;) #每一本书籍最外部的节点</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        for div in divs:</span><br><span class="line">            msg_num += 1</span><br><span class="line">            title = div.xpath(&apos;./tr/td[2]/div[1]/a/@title&apos;)[0]#从最外部节点找到书籍名，后面加[0]是引用列表元素。</span><br><span class="line">            href = div.xpath(&apos;./tr/td[2]/div[1]/a/@href&apos;)[0]#从最外部节点找到书籍详细链接</span><br><span class="line">            score = div.xpath(&apos;./tr/td[2]/div[2]/span[2]/text()&apos;)[0]#从最外部节点找到书籍评分</span><br><span class="line">            score_people_num = div.xpath(&apos;./tr/td[2]/div[2]/span[3]/text()&apos;)[0]\</span><br><span class="line">                                        .strip(&quot;(&quot;).strip().strip(&quot;)&quot;)#从最外部节点找到书籍评价人数，并去除左右两边的括号和中间的空格</span><br><span class="line">            print(&quot;&#123;&#125;: &#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;&quot;.format(msg_num, title, href, score, score_people_num))</span><br><span class="line">            time.sleep(1)#防止抓取信息过于频繁导致IP被封及尽量不影响别人的网站</span><br></pre></td></tr></table></figure><p>通过对豆瓣TOP250书籍的url分析对比如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://book.douban.com/top250?start=25&quot;&gt;2&lt;/a&gt;</span><br><span class="line">&lt;a href=&quot;https://book.douban.com/top250?start=50&quot;&gt;3&lt;/a&gt;</span><br><span class="line">&lt;a href=&quot;https://book.douban.com/top250?start=75&quot;&gt;4&lt;/a&gt;</span><br><span class="line">&lt;a href=&quot;https://book.douban.com/top250?start=100&quot;&gt;5&lt;/a&gt;</span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>我们发现区别就在于最后”start=”的数值每次相差25，所以 可以使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for page in range(10): 10页共250条</span><br><span class="line">        url = &apos;https://book.douban.com/top250?start=&#123;&#125;&apos;.format(page*25)</span><br></pre></td></tr></table></figure><p>来获取网页地址。</p><p>我们在获取每一本书的Xpath的时候也发现相应的规律，比如第一本书：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">书籍的Xpath：‘//*[@id=&quot;content&quot;]/div/div[1]/div/table[1]/tbody/tr/td[2]’</span><br><span class="line">书名的Xpath: &apos;//*[@id=&quot;content&quot;]/div/div[1]/div/table[1]/tbody/tr/td[2]/div[1]/a&apos;</span><br><span class="line">评分的Xpath：‘//*[@id=&quot;content&quot;]/div/div[1]/div/table[1]/tbody/tr/td[2]/div[2]/span[2]’</span><br><span class="line">人数的Xpath：‘//*[@id=&quot;content&quot;]/div/div[1]/div/table[1]/tbody/tr/td[2]/div[2]/span[3]’</span><br></pre></td></tr></table></figure><p>我们可以看到的是书名、评分、人数的Xpath都是在整本书的<code>Xpath=‘//*[@id=&quot;content&quot;]/div/div[1]/div/table[1]/tbody/tr/td[2]’</code>的基础上在多加一点内容。所以我们可以这样写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">divs = s.xpath(&apos;//*[@id=&quot;content&quot;]/div/div[1]/div/table&apos;) #每一本书籍最外部的节点</span><br><span class="line"></span><br><span class="line">        for div in divs:</span><br><span class="line">            msg_num += 1</span><br><span class="line">            title = div.xpath(&apos;./tr/td[2]/div[1]/a/@title&apos;)[0]#从最外部节点找到书籍名</span><br><span class="line">            href = div.xpath(&apos;./tr/td[2]/div[1]/a/@href&apos;)[0]#从最外部节点找到书籍详细链接</span><br><span class="line">            score = div.xpath(&apos;./tr/td[2]/div[2]/span[2]/text()&apos;)[0]#从最外部节点找到书籍评分</span><br><span class="line">            score_people_num = div.xpath(&apos;./tr/td[2]/div[2]/span[3]/text()&apos;)[0]\</span><br><span class="line">                                        .strip(&quot;(&quot;).strip().strip(&quot;)&quot;)#从最外部节点找到书籍评价人数，并去除左右两边的括号和中间的空格</span><br></pre></td></tr></table></figure><p>每一个信息都是在最外部的节点路径上加上更详细的路径。</p><blockquote><p>注意：</p><p>1.当我们复制Xpath是里面会有一个”tbody/“内容，我们在下载时需要把这个内容删除掉，不然无法获取对应的信息。<br>2.关于在Xpath内容后加上”text()“,”@title”、”@href“等内容是Xpath语法详见XPath总结的内容。</p></blockquote><p>下面是另一个爬取小猪短租南京在指定时间内的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">def Craw():</span><br><span class="line">    msg_num = 0</span><br><span class="line">    for p in range(1,6):</span><br><span class="line">        url = &apos;http://nj.xiaozhu.com/search-duanzufang-p&#123;&#125;-0/?startDate=2018-08-27&amp;endDate=2018-09-30&apos;.format(p)</span><br><span class="line">        data = requests.get(url).text</span><br><span class="line">        s = etree.HTML(data)</span><br><span class="line">        #print(data)</span><br><span class="line"></span><br><span class="line">        divs = s.xpath(&apos;//*[@id=&quot;page_list&quot;]/ul/li&apos;)</span><br><span class="line"></span><br><span class="line">        for div in divs:</span><br><span class="line">            msg_num += 1</span><br><span class="line">            titles = div.xpath(&apos;./div[2]/div/a/span/text()&apos;)[0]</span><br><span class="line">            details = div.xpath(&apos;./div[2]/div/em/text()&apos;)[0].strip()</span><br><span class="line">            prices = div.xpath(&apos;./div[2]/span[1]/i/text()&apos;)[0]</span><br><span class="line">            href = div.xpath(&apos;./a/@href&apos;)[0]</span><br><span class="line">            time.sleep(1)</span><br><span class="line">            print(&quot;&#123;&#125;: &#123;&#125;  &#123;&#125;  &#123;&#125;  &#123;&#125;&quot;.format(msg_num,titles,details,prices,href))</span><br></pre></td></tr></table></figure><p>加入存储数据到文件的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">def Craw():</span><br><span class="line">    msg_num = 0</span><br><span class="line">    with open(r&apos;/Users/pgj/Desktop/data.csv&apos;, &apos;w&apos;, encoding=&apos;utf-8&apos;) as f:</span><br><span class="line">        for p in range(1,3):</span><br><span class="line">            url = &apos;http://nj.xiaozhu.com/search-duanzufang-p&#123;&#125;-0/?startDate=2018-08-27&amp;endDate=2018-09-30&apos;.format(p)</span><br><span class="line">            data = requests.get(url).text</span><br><span class="line">            s = etree.HTML(data)</span><br><span class="line">            #print(data)</span><br><span class="line"></span><br><span class="line">            divs = s.xpath(&apos;//*[@id=&quot;page_list&quot;]/ul/li&apos;)</span><br><span class="line"></span><br><span class="line">            for div in divs:</span><br><span class="line">                msg_num += 1</span><br><span class="line">                titles = div.xpath(&apos;./div[2]/div/a/span/text()&apos;)[0]</span><br><span class="line">                details = div.xpath(&apos;./div[2]/div/em/text()&apos;)[0].strip()</span><br><span class="line">                prices = div.xpath(&apos;./div[2]/span[1]/i/text()&apos;)[0]</span><br><span class="line">                href = div.xpath(&apos;./a/@href&apos;)[0]</span><br><span class="line">                time.sleep(1)</span><br><span class="line">                f.write(&quot;&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;\n&quot;.format(msg_num,titles,details,prices,href))</span><br><span class="line">                print(&quot;&#123;&#125;: &#123;&#125;  &#123;&#125;  &#123;&#125;  &#123;&#125;&quot;.format(msg_num,titles,details,prices,href))</span><br><span class="line"></span><br><span class="line">Craw()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇记录使用Requests + Xpath爬取豆瓣书籍&lt;/p&gt;
&lt;h2 id=&quot;1-Requests&quot;&gt;&lt;a href=&quot;#1-Requests&quot; class=&quot;headerlink&quot; title=&quot;1.Requests&quot;&gt;&lt;/a&gt;1.Requests&lt;/h2&gt;&lt;p&gt;Re
      
    
    </summary>
    
      <category term="技术" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="爬虫" scheme="http://puguojing.com/categories/%E6%8A%80%E6%9C%AF/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="http://puguojing.com/tags/Python/"/>
    
      <category term="爬虫" scheme="http://puguojing.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Requests" scheme="http://puguojing.com/tags/Requests/"/>
    
      <category term="Xpath" scheme="http://puguojing.com/tags/Xpath/"/>
    
  </entry>
  
</feed>
